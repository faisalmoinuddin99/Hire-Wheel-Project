{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/booking/book-vehicle/book-vehicle.component.ts","./src/app/booking/book-vehicle/book-vehicle.component.html","./src/app/booking/booking-routing.module.ts","./src/app/core/core-routing.module.ts","./src/app/core/footer/footer.component.ts","./src/app/core/footer/footer.component.html","./src/app/core/nav-bar/nav-bar.component.ts","./src/app/core/nav-bar/nav-bar.component.html","./src/app/home/home/home.component.ts","./src/app/home/home/home.component.html","./src/app/models/user.ts","./src/app/shared/auth-service.service.ts","./src/app/shared/reset-password/reset-password.component.ts","./src/app/shared/reset-password/reset-password.component.html","./src/app/shared/signin-modal/signin-modal.component.ts","./src/app/shared/signin-modal/signin-modal.component.html","./src/app/shared/signin/signin.component.ts","./src/app/shared/signin/signin.component.html","./src/app/shared/signup/signup.component.ts","./src/app/shared/signup/signup.component.html","./src/app/user/add-vehicle/add-vehicle.component.ts","./src/app/user/add-vehicle/add-vehicle.component.html","./src/app/user/admin-dashboard/admin-dashboard.component.ts","./src/app/user/admin-dashboard/admin-dashboard.component.html","./src/app/user/user-routing.module.ts","./src/app/user/vehicle-service.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BookVehicleComponent } from './booking/book-vehicle/book-vehicle.component';\nimport { BookingRoutingModule } from './booking/booking-routing.module';\nimport { CoreRoutingModule } from './core/core-routing.module';\nimport { FooterComponent } from './core/footer/footer.component';\nimport { NavBarComponent } from './core/nav-bar/nav-bar.component';\nimport { HomeComponent } from './home/home/home.component';\nimport { SigninModalComponent } from './shared/signin-modal/signin-modal.component';\nimport { SigninComponent } from './shared/signin/signin.component';\nimport { AdminDashboardComponent } from './user/admin-dashboard/admin-dashboard.component';\nimport { UserRoutingModule } from './user/user-routing.module';\n\n\nconst routes: Routes = [\n  {path:'signmodal',component:SigninModalComponent},\n {path:'',component:HomeComponent},\n\n \n  \n \n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes),BookingRoutingModule,CoreRoutingModule,UserRoutingModule],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'tm-car-renting-app-frontend';\n}\n","\n<app-nav-bar></app-nav-bar>\n<app-footer></app-footer>\n<router-outlet></router-outlet> ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavBarComponent } from './core/nav-bar/nav-bar.component';\nimport { HomeComponent } from './home/home/home.component';\nimport { FooterComponent } from './core/footer/footer.component';\nimport { SigninModalComponent } from './shared/signin-modal/signin-modal.component';\nimport { SigninComponent } from './shared/signin/signin.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { SignupComponent } from './shared/signup/signup.component';\nimport { ValidateEqualModule } from 'ng-validate-equal';\nimport { ResetPasswordComponent } from './shared/reset-password/reset-password.component';\nimport { BookVehicleComponent } from './booking/book-vehicle/book-vehicle.component';\nimport { AddVehicleComponent } from './user/add-vehicle/add-vehicle.component';\nimport { AdminDashboardComponent } from './user/admin-dashboard/admin-dashboard.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n    HomeComponent,\n    FooterComponent,\n    SigninModalComponent,\n    SigninComponent,\n    SignupComponent,\n    ResetPasswordComponent,\n    BookVehicleComponent,\n    AddVehicleComponent,\n    AdminDashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ModalModule.forRoot(),\n    TabsModule.forRoot(),\n    HttpClientModule,\n    BsDatepickerModule.forRoot()\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport Stepper from 'bs-stepper';\n\n@Component({\n  selector: 'app-book-vehicle',\n  templateUrl: './book-vehicle.component.html',\n  styleUrls: ['./book-vehicle.component.scss']\n})\nexport class BookVehicleComponent implements OnInit {\n  private stepper: Stepper;\n \n  constructor() { }\n\n  ngOnInit(): void {\n    this.stepper = new Stepper(document.querySelector('#stepper1'), {\n      linear: false,\n      animation: true\n    })\n  }\n  prev(){\n    this.stepper.previous();\n  }\n\n  next() {\n    this.stepper.next();\n  }\n\n  onSubmit() {\n    return false;\n  }\n}\n","<div class=\"container\">\n    \n    <div id=\"stepper1\" class=\"bs-stepper\">\n      <div class=\"bs-stepper-header\">\n        <div class=\"step\" data-target=\"#test-l-1\">\n          <button class=\"step-trigger\">\n            <span class=\"bs-stepper-circle\">1</span>\n            <span class=\"bs-stepper-label\">Pick Up</span>\n          </button>\n        </div>\n        <div class=\"line\"></div>\n        <div class=\"step\" data-target=\"#test-l-2\">\n          <button class=\"step-trigger\">\n            <span class=\"bs-stepper-circle\">2</span>\n            <span class=\"bs-stepper-label\">Drop Off</span>\n          </button>\n        </div>\n        <div class=\"line\"></div>\n        <div class=\"step\" data-target=\"#test-l-3\">\n          <button class=\"step-trigger\">\n            <span class=\"bs-stepper-circle\">3</span>\n            <span class=\"bs-stepper-label\">Available Vehicles</span>\n          </button>\n        </div>\n        <div class=\"line\"></div>\n        <div class=\"step\" data-target=\"#test-l-4\">\n          <button class=\"step-trigger\">\n            <span class=\"bs-stepper-circle\">4</span>\n            <span class=\"bs-stepper-label\">Confirm Booking</span>\n          </button>\n        </div>\n\n      </div>\n      <div class=\"bs-stepper-content\">\n        <form (ngSubmit)=\"onSubmit()\">\n          <div id=\"test-l-1\" class=\"content\">\n            <div class=\"form-group\">\n                <div class=\"col-md-4\">\n              <label for=\"pickup\">Select Pick Up Date</label>\n              <input type=\"text\" class=\"form-control\" id=\"pickup\" placeholder=\"Select Pick Up Date\" bsDatepicker/>\n            </div>\n            </div>\n            <div class=\"col-md-4\">\n            <button (click)=\"next()\" class=\"btn btn-primary\">Next</button></div>\n          </div>\n          <div id=\"test-l-2\" class=\"content\">\n          \n            <div class=\"form-group row\">\n              <div class=\"col-sm-4\">\n              <input type=\"text\" class=\"form-control\" id=\"location\" placeholder=\"Select Location\" />\n            </div>\n            <div class=\"col-sm-4\">\n              \n                <input type=\"text\" class=\"form-control\" id=\"dropoff\" placeholder=\"Select Drop Off Date\" bsDatepicker />\n              </div>\n              </div>\n              <button (click)=\"prev()\" type=\"button\" class=\"btn btn-default\">Prev</button>\n            <button (click)=\"next()\" class=\"btn btn-primary\">Next</button>\n          </div>\n          <div id=\"test-l-3\" class=\"content text-center\">\n            <button type=\"submit\" class=\"btn btn-primary mt-5\">Submit</button>\n          </div>\n          <div id=\"test-l-4\" class=\"content text-center\">\n            <button type=\"submit\" class=\"btn btn-primary mt-5\">Submit</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n  ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BookVehicleComponent } from './book-vehicle/book-vehicle.component';\n\nconst routes: Routes = [\n    {path:'book',component:BookVehicleComponent},\n    \n    \n   \n    \n  ];\n  @NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n  })\n  export class BookingRoutingModule{}\n  ","import { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\n\nconst routes: Routes = [\n    \n    \n    \n   \n    \n  ];\n  @NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n  })\n  export class CoreRoutingModule{}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<html>\n    <head>\n\n    </head>\n    <body>\n        <div class=\"footer\">\n               \n                    <div><a href=\"https://www.upgrad.com/contact/\" target=\"_blank\">Contact Us</a></div>\n                    <div id=\"copyright\">©upGrad</div>\n                    <div>\n                        <a href=\"https://www.facebook.com/UpGradGlobal\" target=\"_blank\">Facebook</a>&nbsp;\n                        <a href=\"https://twitter.com/UpGrad_Edu\" target=\"_blank\">Twitter </a>\n                    </div>                \n                \n        </div>\n    </body>\n</html>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<html>\n  <head>\n    <title>Homepage</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n</head>\n<body>\n    <div>\n  <nav class=\"navbar navbar-expand-lg\">\n      <div class=\"container-fluid\">\n       <div> <i class=\"fa fa-car\" aria-hidden=\"true\"><button id=\"hire\" class=\"btn btn-link\" [routerLink]=\"['']\" >HireWheels</button></i></div>\n        <div><app-signin-modal></app-signin-modal></div>\n      </div>\n      \n     \n  </nav>\n</div>\n</body>\n</html>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<html>\n    <head>\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n    </head>\n    <body>\n  \n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-md-2\"></div>\n                <div class=\"col-md-8\" style=\"text-align: center;\"><h3>Self-drive vehicle rental in Mumbai</h3></div>\n                <div class=\"col-md-2\"></div>\n            </div><br>\n            <div class=\"row\">\n                <div class=\"col-md-2\"></div>\n                <div class=\"col-md-8\" style=\"text-align: center;\"><button type=\"button\" class=\"btn btn-success\" [routerLink]=\"['/book']\">Book Now <i class=\"fa fa-arrow-circle-right\"></i></button></div>\n                <div class=\"col-md-2\"></div>\n            </div>\n            </div>\n            \n            \n    </body>\n</html>\n","export class User{\n    userId?:number;\n    firstName: string;\n\tlastName: string;\n\temail: string;\n    password :string;\n    mobileNo: string;\n    jwtToken: string;\n}","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpErrorResponse } from '@angular/common/http';\nimport { User } from '../models/user';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { catchError,tap} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\nuser=new Subject<User>();\n  constructor(private httpClient:HttpClient) { }\n  signup(user:User){\n    let url='http://localhost:8012/hirewheels/v1/users';\n    return this.httpClient.post(url,user);\n  }\n\n  saveUser(user:User){\n    localStorage.setItem('user',JSON.stringify(user));\n    localStorage.setItem('token',user.jwtToken);\n  }\n\n  login(credentials):Observable<User>{\n    let url='localhost:8012/hirewheels/v1/users/access-token';\n    return this.httpClient.post<User>(url,credentials).pipe(catchError(this.errorHandler),\n    tap((response:User)=>{\n      this.saveUser(response);\n      this.user.next(response);\n    }));\n  }\n\n  private errorHandler(errorRes: HttpErrorResponse) {\n    let errorMessage = 'Error!';\n    if (!errorRes.error || !errorRes.error.error) {\n      return throwError(errorMessage);\n    }\n\n    if (errorRes.error && errorRes.error.error) {\n      errorMessage = errorRes.error.error;\n    }\n\n    return throwError(errorMessage);\n  }\n\n  getToken(){\n    return localStorage.getItem('token');\n}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\nemail:string\nmobile:string\npassword:string\nconpassword:string\n  constructor() { }\n\n  ngOnInit(): void {\n  }\nonSubmit(credentials:NgForm){\n\n}\n}\n","<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-header\" style=\"text-align: center;\"><h3>Reset Password</h3></div>\n        <div class=\"card-body\">\n             <form (ngSubmit)='onSubmit(resetForm.value)' #resetForm=\"ngForm\">\n                 <div class=\"form-group row\">\n                     <label for=\"email\" class=\"col-lg-3 col-form-label\">Email ID:</label>\n                     <div class=\"col-lg-9\"><input type=\"email\" name=\"email\" [(ngModel)]=\"email\" class=\"form-control\" required #emailid=\"ngModel\"\n                     pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\">\n                     <div *ngIf=\"emailid.invalid && (emailid.dirty || emailid.touched)\" class=\"text-danger\">\n                         <div *ngIf=\"emailid.errors.required\">\n                             Email id is required.\n                         </div>\n                         <div *ngIf=\"emailid.errors.pattern\">\n                             Enter a valid email address\n                         </div>\n     \n                     </div>\n                 </div>\n                 </div>\n \n                 <div class=\"form-group row\">\n                    <label for=\"mobile\" class=\"col-lg-3 col-form-label\">Mobile Number:</label>\n                    <div class=\"col-lg-9\"><input type=\"text\" name=\"mobile\" [(ngModel)]=\"mobile\" class=\"form-control\" required \n                        #mobileNum=\"ngModel\" pattern=[1-9][0-9]{9}>\n                    <div *ngIf=\"mobileNum.invalid && (mobileNum.dirty || mobileNum.touched)\" class=\"text-danger\">\n                        <div *ngIf=\"mobileNum.errors.required\">\n                            Mobile Number is required.\n                        </div>\n                        <div *ngIf=\"mobileNum.errors.pattern\">\n                            Mobile number must have 10 digits only and cannot start with 0.\n                        </div>\n    \n                    </div>\n                    </div>\n                </div>\n\n\n \n                 <div class=\"form-group row\">\n                 <label for=\"password\" class=\"col-lg-3 col-form-label\">Password:</label>\n                 <div class=\"col-lg-9\"><input type=\"password\" name=\"password\" [(ngModel)]=\"password\" class=\"form-control\" required \n                    #passwd=\"ngModel\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}\">\n                 <div *ngIf=\"passwd.invalid && (passwd.dirty || passwd.touched)\" class=\"text-danger\">\n                     <div *ngIf=\"passwd.errors.required\">\n                         Password is required.\n                     </div>\n                     <div *ngIf=\"passwd.errors.pattern\">\n                        Password should have minimum 5 characters, at least 1 uppercase letter, 1 lowercase letter and 1 number.\n                     </div>\n \n                 </div>\n                </div>\n             </div>\n             <div class=\"form-group row\">\n                <label for=\"conpassword\" class=\"col-lg-3 col-form-label\"> Confirm Password:</label>\n                <div class=\"col-lg-9\"><input type=\"password\" name=\"conpassword\" [(ngModel)]=\"conpassword\" class=\"form-control\" required #confirmpasswd=\"ngModel\">\n                <div *ngIf=\"confirmpasswd.invalid && (confirmpasswd.dirty || confirmpasswd.touched)\" class=\"text-danger\">\n                    <div *ngIf=\"confirmpasswd.errors.required\">\n                        Confirm Password is required.\n                    </div>\n\n                </div>\n            </div>\n            </div>\n  \n\n             <div class=\"form-group row\">\n                 <div class=\"col-md-3\"></div>\n                 <div class=\"col-md-6\"><input type=\"submit\" class=\"btn btn-primary\" style=\"width: 100%;\" value=\"Submit\" [disabled]=\"!resetForm.valid\"></div>\n                 <div class=\"col-md-3\"></div>\n             </div>\n                       \n                 \n             </form>\n         </div>\n         </div>\n       \n </div>\n \n","import { Component, OnInit,ViewChild, TemplateRef} from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\n\n \n\n@Component({\n  selector: 'app-signin-modal',\n  templateUrl: './signin-modal.component.html',\n  styleUrls: ['./signin-modal.component.scss']\n})\nexport class SigninModalComponent {\n  name = 'Angular';\nmodalRef:BsModalRef | null;\nmodalRef2:BsModalRef;\nconstructor(private modalService: BsModalService) {}\n \nngOnInit(): void {\n}\nopenFirstModal(template: TemplateRef<any>) {\n  this.modalRef = this.modalService.show(template, { class: 'modal-lg' });\n}\nopenModalSecond(template: TemplateRef<any>) {\n  this.modalRef2 = this.modalService.show(template, { class: 'modal-lg' });\n}\ncloseFirstModal() {\n  if (!this.modalRef) {\n    return;\n  }\n\n  this.modalRef.hide();\n  this.modalRef = null;\n}\n\ncloseModal(){\n    this.modalRef2.hide();\n}\n}\n\n\n","<html>\n    <head>\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n\n    </head>\n\n<body>\n\n<button class=\"btn btn-link\" id=\"sign\" (click)=\"openFirstModal(templatefirst)\">Sign In</button>\n   \n<ng-template #templatefirst>\n  <div class=\"modal-header\">\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <tabset>\n      <tab id=\"tab1\">\n          <ng-template tabHeading><div id=\"signintab\"><i class=\"fa fa-sign-in\"></i> &nbsp;Sign in</div></ng-template>\n          <app-signin></app-signin>\n      \n          <div class=\"row\">\n            <div class=\"col-md-3\"></div>\n            <div class=\"col-md-6\" style=\"text-align: center;\"><button type=\"button\" class=\"btn btn-link\" (click)=\"openModalSecond(templateSecond)\">Forgot Password</button></div>\n            <div class=\"col-md-3\"></div>\n          </div>\n          <div>\n            <p style=\"text-align: center;\">Don't have an account? <a href=\"#\">Sign Up</a></p>\n          </div>\n          \n      </tab>\n      <tab id=\"tab2\">\n      <ng-template tabHeading><div id=\"signuptab\"><i class=\"fa fa-user-plus\"></i> &nbsp;Sign up</div></ng-template>\n      <app-signup></app-signup>\n  </tab>\n    </tabset>\n     <br/>\n    \n  </div>\n</ng-template>\n\n<ng-template #templateSecond>\n  <div class=\"modal-header\">\n    \n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef2.hide()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <app-reset-password></app-reset-password>\n  </div>\n</ng-template>\n\n\n</body>\n\n  </html>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent implements OnInit {\n\n  constructor() { }\nemail:string\npassword:string\n  ngOnInit(): void {\n  }\nonSubmit(credentials:NgForm){\n  console.log(credentials);\n}\n}\n","<div class=\"container\">\n   <div class=\"card\">\n       <div class=\"card-header\" style=\"text-align: center;\"><h3> Sign In</h3></div>\n       <div class=\"card-body\">\n            <form (ngSubmit)='onSubmit(signinForm.value)' #signinForm=\"ngForm\">\n                <div class=\"form-group row\">\n                    <label for=\"email\" class=\"col-lg-3 col-form-label\">Email ID:</label>\n                    <div class=\"col-lg-9\"><input type=\"email\" name=\"email\" [(ngModel)]=\"email\" class=\"form-control\" required #emailid=\"ngModel\"\n                    pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\">\n                    <div *ngIf=\"emailid.invalid && (emailid.dirty || emailid.touched)\" class=\"text-danger\">\n                        <div *ngIf=\"emailid.errors.required\">\n                            Email id is required.\n                        </div>\n                        <div *ngIf=\"emailid.errors.pattern\">\n                            Enter a valid email address\n                        </div>\n    \n                    </div>\n                </div>\n                </div>\n\n                <div class=\"form-group row\">\n                <label for=\"password\" class=\"col-lg-3 col-form-label\">Password:</label>\n                <div class=\"col-lg-9\"><input type=\"password\" name=\"password\" [(ngModel)]=\"password\" class=\"form-control\" required \n                    #passwd=\"ngModel\">\n                <div *ngIf=\"passwd.invalid && (passwd.dirty || passwd.touched)\" class=\"text-danger\">\n                    <div *ngIf=\"passwd.errors.required\">\n                        Password is required.\n                    </div>\n\n                </div>\n            </div>\n            </div><br>\n            <div class=\"form-group row\">\n                <div class=\"col-md-3\"></div>\n                <div class=\"col-md-6\"><input type=\"submit\" class=\"btn btn-primary\" style=\"width: 100%;\" value=\"Sign In\" [disabled]=\"!signinForm.valid\"></div>\n                <div class=\"col-md-3\"></div>\n            </div>\n                      \n                \n            </form>\n        </div>\n        </div>\n      \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/models/user';\nimport { AuthServiceService } from '../auth-service.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\nsignup=new User();\n  constructor(private router:Router, private authService:AuthServiceService) { }\n\n  ngOnInit(): void {\n  }\n  signupUser(){\n    this.authService.signup(this.signup).subscribe(result =>{\n        //success\n        console.log(result);\n        this.authService.saveUser(this.signup);\n        alert('Signup successful');\n      \n    },err =>{\n      alert(JSON.stringify(err));\n    });\n  }\n}\n","<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-header\" style=\"text-align: center;\"> <h3>Sign Up </h3></div>\n        <div class=\"card-body\">\n             <form (ngSubmit)=\"signupUser()\" #signupForm=\"ngForm\">\n                 <div class=\"form-group row\">\n                     <label for=\"firstname\" class=\"col-lg-3 col-form-label\">First Name:</label>\n                     <div class=\"col-lg-9\"><input type=\"text\" name=\"firstname\" [(ngModel)]=\"signup.firstName\" class=\"form-control\" required #firstname=\"ngModel\">\n                     <div *ngIf=\"firstname.invalid && (firstname.dirty || firstname.touched)\" class=\"text-danger\">\n                         <div *ngIf=\"firstname.errors.required\">\n                             First Name is required.\n                         </div>\n                        \n     \n                     </div>\n                     </div>\n                 </div>\n\n                 <div class=\"form-group row\">\n                    <label for=\"lastname\" class=\"col-lg-3 col-form-label\">Last Name:</label>\n                    <div class=\"col-lg-9\"><input type=\"text\" name=\"lastname\" [(ngModel)]=\"signup.lastName\" class=\"form-control\" required #lastname=\"ngModel\">\n                   \n                    </div>\n                </div>\n\n                <div class=\"form-group row\">\n                    <label for=\"email\" class=\"col-lg-3 col-form-label\">Email ID:</label>\n                    <div class=\"col-lg-9\"><input type=\"email\" name=\"email\" [(ngModel)]=\"signup.email\" class=\"form-control\" required #emailid=\"ngModel\"\n                    pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\">\n                    <div *ngIf=\"emailid.invalid && (emailid.dirty || emailid.touched)\" class=\"text-danger\">\n                        <div *ngIf=\"emailid.errors.required\">\n                            Email id is required.\n                        </div>\n                        <div *ngIf=\"emailid.errors.pattern\">\n                            Enter a valid email address\n                        </div>\n    \n                    </div>\n                    </div>\n                </div>\n\n                <div class=\"form-group row\">\n                    <label for=\"mobile\" class=\"col-lg-3 col-form-label\">Mobile Number:</label>\n                    <div class=\"col-lg-9\"><input type=\"text\" name=\"mobile\" [(ngModel)]=\"signup.mobileNo\" class=\"form-control\" required \n                        #mobileNum=\"ngModel\" pattern=[1-9][0-9]{9}>\n                    <div *ngIf=\"mobileNum.invalid && (mobileNum.dirty || mobileNum.touched)\" class=\"text-danger\">\n                        <div *ngIf=\"mobileNum.errors.required\">\n                            Mobile Number is required.\n                        </div>\n                        <div *ngIf=\"mobileNum.errors.pattern\">\n                            Mobile number must have 10 digits only and cannot start with 0.\n                        </div>\n    \n                    </div>\n                    </div>\n                </div>\n\n\n \n                 <div class=\"form-group row\">\n                 <label for=\"password\" class=\"col-lg-3 col-form-label\">Password:</label>\n                 <div class=\"col-lg-9\"><input type=\"password\" name=\"password\" [(ngModel)]=\"signup.password\" class=\"form-control\" required \n                    #passwd=\"ngModel\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}\">\n                 <div *ngIf=\"passwd.invalid && (passwd.dirty || passwd.touched)\" class=\"text-danger\">\n                     <div *ngIf=\"passwd.errors.required\">\n                         Password is required.\n                     </div>\n                     <div *ngIf=\"passwd.errors.pattern\">\n                        Password should have minimum 5 characters, at least 1 uppercase letter, 1 lowercase letter and 1 number.\n                     </div>\n \n                 </div>\n                </div>\n             </div>\n             <div class=\"form-group row\">\n                <label for=\"conpassword\" class=\"col-lg-3 col-form-label\"> Confirm Password:</label>\n                <div class=\"col-lg-9\"><input type=\"password\" name=\"conpassword\" [(ngModel)]=\"signup.password\" class=\"form-control\" required #confirmpasswd=\"ngModel\">\n                <div *ngIf=\"confirmpasswd.invalid && (confirmpasswd.dirty || confirmpasswd.touched)\" class=\"text-danger\">\n                    <div *ngIf=\"confirmpasswd.errors.required\">\n                        Confirm Password is required.\n                    </div>\n\n                </div>\n            </div>\n            </div>\n             <br>\n             <div class=\"form-group row\">\n                 <div class=\"col-md-3\"></div>\n                <div class=\"col-md-6\"><input type=\"submit\" class=\"btn btn-primary\" value=\"Sign In\" [disabled]=\"!signupForm.valid\" style=\"width: 100%;\"></div>\n                <div class=\"col-md-3\"></div>\n             </div>\n                       \n                 \n             </form>\n         </div>\n         </div>\n       \n </div>\n \n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { Location} from '@angular/common';\nimport { VehicleServiceService } from '../vehicle-service.service';\n\n@Component({\n  selector: 'app-add-vehicle',\n  templateUrl: './add-vehicle.component.html',\n  styleUrls: ['./add-vehicle.component.scss']\n})\nexport class AddVehicleComponent implements OnInit {\n  vehicleForm:FormGroup\n  constructor(private location:Location,private vehicelService:VehicleServiceService,private formBuilder:FormBuilder) { }\n\n  ngOnInit(): void {\n    this.vehicleForm=this.formBuilder.group({\n      vehicleName:['',Validators.required],\n      vehicleNumber:['',Validators.required],\n      vehicleCategory:['',Validators.required],\n      fuelType:['',Validators.required],\n      vehiclesubCategory:['',Validators.required],\n      vehicleColor:['',Validators.required],\n      availLocation:['',Validators.required],\n      url:['',Validators.required]\n\n    })\n  }\n\ngoBack(){\n  this.location.back();\n}\naddVehicle(){\n  \n}\n}\n","<div class=\"container\">\n    <button type='button' class=\"btn btn-link\" (click)=\"goBack()\">< Back to dashboard</button>\n    <div class=\"card\">\n        <div class=\"card-header\" style=\"text-align: center;\"><h3>Add Vehicle</h3></div>\n        <div class=\"card-body\">\n             <form  [formGroup]=\"vehicleForm\" (ngSubmit)=\"addVehicle()\">\n                 <div class=\"form-group row\">\n                     <div class=\"col-md-6\">\n                        <label for=\"name\" class=\"form-label\">Vehicle Name</label>\n                        \n                            <input type=\"text\" class=\"form-control form-control-sm\" id=\"name\"\n                                formControlName=\"vehicleName\" [ngClass]=\"{\n                              'is-invalid': \n                                (vehicleForm.get('vehicleName').touched ||\n                                  vehicleForm.get('vehicleName').dirty) &&\n                                !vehicleForm.get('vehicleName').valid\n                            }\" />\n                            <span class=\"invalid-feedback\">\n                                <span *ngIf=\"vehicleForm.get('vehicleName').errors?.required\">\n                                    Vehicle Name is required.\n                                </span>\n                               \n                            </span>\n                        \n                    </div>\n                    <div class=\"col-md-6\">\n                        <label for=\"number\" class=\"form-label\">Vehicle Number</label>\n                        \n                        <input type=\"text\" class=\"form-control form-control-sm\" id=\"number\"\n                            formControlName=\"vehicleNumber\" [ngClass]=\"{\n                          'is-invalid': \n                            (vehicleForm.get('vehicleName').touched ||\n                              vehicleForm.get('vehicleNumber').dirty) &&\n                            !vehicleForm.get('vehicleNumber').valid\n                        }\" />\n                        <span class=\"invalid-feedback\">\n                            <span *ngIf=\"vehicleForm.get('vehicleName').errors?.required\">\n                                Vehicle Number is required.\n                            </span>\n                           \n                        </span>\n                       </div>\n                 \n                 </div>\n                 <div class=\"form-group row\">\n                     <div class=\"col-md-6\">\n                    <label for=\"category\" class=\"form-label\">Vehicle Category</label>\n                        \n                    <input type=\"text\" class=\"form-control form-control-sm\" id=\"category\"\n                        formControlName=\"vehicleCategory\" [ngClass]=\"{\n                      'is-invalid': \n                        (vehicleForm.get('vehicleCategory').touched ||\n                          vehicleForm.get('vehicleCategory').dirty) &&\n                        !vehicleForm.get('vehicleCategory').valid\n                    }\" />\n                    <span class=\"invalid-feedback\">\n                        <span *ngIf=\"vehicleForm.get('vehicleCategory').errors?.required\">\n                            Vehicle Category is required.\n                        </span>\n                       \n                    </span>\n                </div>\n                   <div class=\"col-md-6\">\n                    <label for=\"type\" class=\"form-label\">Fuel Type</label>\n                        \n                    <input type=\"text\" class=\"form-control form-control-sm\" id=\"type\"\n                        formControlName=\"fuelType\" [ngClass]=\"{\n                      'is-invalid': \n                        (vehicleForm.get('fuelType').touched ||\n                          vehicleForm.get('fuelType').dirty) &&\n                        !vehicleForm.get('fuelType').valid\n                    }\" />\n                    <span class=\"invalid-feedback\">\n                        <span *ngIf=\"vehicleForm.get('fuelType').errors?.required\">\n                            Fuel Type is required.\n                        </span>\n                       \n                    </span>\n                      </div>\n                \n                </div>\n                <div class=\"form-group row\">\n                    <div class=\"col-md-6\">\n                        <label for=\"subcategory\" class=\"form-label\">Vehicle Subcategory</label>\n                        \n                        <input type=\"text\" class=\"form-control form-control-sm\" id=\"subcategory\"\n                            formControlName=\"vehiclesubCategory\" [ngClass]=\"{\n                          'is-invalid': \n                            (vehicleForm.get('vehiclesubCategory').touched ||\n                              vehicleForm.get('vehiclesubCategory').dirty) &&\n                            !vehicleForm.get('vehiclesubCategory').valid\n                        }\" />\n                        <span class=\"invalid-feedback\">\n                            <span *ngIf=\"vehicleForm.get('vehiclesubCategory').errors?.required\">\n                                Vehicle Subcategory.\n                            </span>\n                           \n                        </span>\n                   </div>\n                   <div class=\"col-md-6\">\n                    <label for=\"color\" class=\"form-label\">Color</label>\n                        \n                    <input type=\"text\" class=\"form-control form-control-sm\" id=\"color\"\n                        formControlName=\"vehicleColor\" [ngClass]=\"{\n                      'is-invalid': \n                        (vehicleForm.get('vehicleColor').touched ||\n                          vehicleForm.get('vehicleColor').dirty) &&\n                        !vehicleForm.get('vehicleColor').valid\n                    }\" />\n                    <span class=\"invalid-feedback\">\n                        <span *ngIf=\"vehicleForm.get('vehicleColor').errors?.required\">\n                            Color is required.\n                        </span>\n                       \n                    </span>\n                      </div>\n                \n                </div>\n                <div class=\"form-group row\">\n                    <div class=\"col-md-6\">\n                        <label for=\"location\" class=\"form-label\">Available Location</label>\n                        \n                        <input type=\"text\" class=\"form-control form-control-sm\" id=\"location\"\n                            formControlName=\"availLocation\" [ngClass]=\"{\n                          'is-invalid': \n                            (vehicleForm.get('availLocation').touched ||\n                              vehicleForm.get('availLocation').dirty) &&\n                            !vehicleForm.get('availLocation').valid\n                        }\" />\n                        <span class=\"invalid-feedback\">\n                            <span *ngIf=\"vehicleForm.get('availLocation').errors?.required\">\n                                Location is required.\n                            </span>\n                           \n                        </span>\n                   </div>\n                   <div class=\"col-md-6\">\n                    <label for=\"imageurl\" class=\"form-label\">Image URL</label>\n                        \n                    <input type=\"text\" class=\"form-control form-control-sm\" id=\"imageurl\"\n                        formControlName=\"url\" [ngClass]=\"{\n                      'is-invalid': \n                        (vehicleForm.get('url').touched ||\n                          vehicleForm.get('url').dirty) &&\n                        !vehicleForm.get('url').valid\n                    }\" />\n                    <span class=\"invalid-feedback\">\n                        <span *ngIf=\"vehicleForm.get('url').errors?.required\">\n                            Image URL is required.\n                        </span>\n                       \n                    </span>\n                      </div>\n                \n                </div>\n                \n <div class=\"row\">\n     <div class=\"col-md-4\"></div>\n     <div class=\"col-md-4\"><input type=\"submit\" class=\"btn btn-primary\" style=\"width: 100%;\" value=\"Upload Details\" [disabled]=\"!vehicleForm.valid\"></div>\n     <div class=\"col-md-4\"></div>\n </div>\n                \n                       \n                 \n             </form>\n         </div>\n         </div>\n       \n </div>\n ","import { Component, OnInit } from '@angular/core';\nimport { Vehicle } from 'src/app/models/vehicle';\nimport { VehicleServiceService } from '../vehicle-service.service';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.scss']\n})\nexport class AdminDashboardComponent implements OnInit {\nvehicles:Vehicle[];\n  constructor(private vehicleService:VehicleServiceService) { }\n\n  ngOnInit(): void {\n    this.vehicleService.getAllVehicle().subscribe(result =>{\n      this.vehicles=result;\n      console.log(this.vehicles);\n    },err => alert(JSON.stringify(err)));\n  }\n\n}\n","<br><h2 style=\"text-align: center;\">Available Vehicles</h2><br>\n<div class=\"container\">\n     <div class=\"col-sm-12\">\n        \n            <button type=\"button\" class=\"btn btn-link\" id=\"vehicle\" [routerLink]=\"['/addvehicle']\">\n                <i class=\"fa fa-plus-circle\" aria-hidden=\"true\" style=\"color: #007BFF;\"></i> Add Vehicle</button>\n        \n    </div>\n    <div class=\"col-sm-12\">\n        <table class=\"table\">\n            <thead>\n                <tr id=\"row1\">\n                    <th scope=\"col\">Image</th>\n                    <th scope=\"col\">Model</th>\n                    <th scope=\"col\">Number</th>\n                    <th scope=\"col\">Sub Category</th>\n                    <th scope=\"col\">Fuel Type</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let vehicle of vehicles\">\n                    <th scope=\"row\">{{ vehicle.carImageUrl }}</th>\n                    <td>{{ vehicle.vehicleModel }}</td>\n                    <td>{{ vehicle.vehicleNumber}}</td>\n                    <td>{{ vehicle.vehicleSubCategoryId }}</td>\n                    <td>{{ vehicle.fuelTypeId }}</td>\n                </tr>\n               \n            </tbody>\n        </table>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddVehicleComponent } from './add-vehicle/add-vehicle.component';\nimport { AdminDashboardComponent } from './admin-dashboard/admin-dashboard.component';\n\n\nconst routes: Routes = [\n    {path:'addvehicle',component:AddVehicleComponent},\n    {path:'admindash',component:AdminDashboardComponent},\n\n    \n    \n   \n    \n  ];\n  @NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n  })\n  export class UserRoutingModule{}\n  ","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport{ Vehicle} from 'src/app/models/vehicle';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VehicleServiceService {\n private url='http://localhost:8012/hirewheels/v1/vehicles';\n  constructor(private httpClient:HttpClient) { }\n\n  getAllVehicle(){\n    return this.httpClient.get<Vehicle[]>(this.url);\n  }\n  addVehicle(vehicle:Vehicle){\n    return this.httpClient.post<Vehicle>(this.url,vehicle);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}