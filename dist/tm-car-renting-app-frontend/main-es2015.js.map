{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/booking/book-vehicle/book-vehicle.component.ts","./src/app/booking/book-vehicle/book-vehicle.component.html","./src/app/core/footer/footer.component.ts","./src/app/core/footer/footer.component.html","./src/app/core/nav-bar/nav-bar.component.ts","./src/app/core/nav-bar/nav-bar.component.html","./src/app/home/home/home.component.ts","./src/app/home/home/home.component.html","./src/app/model/user.ts","./src/app/shared/auth-service.service.ts","./src/app/shared/reset-password/reset-password.component.ts","./src/app/shared/reset-password/reset-password.component.html","./src/app/shared/sign-in/sign-in.component.ts","./src/app/shared/sign-in/sign-in.component.html","./src/app/shared/signin-modal/signin-modal.component.ts","./src/app/shared/signin-modal/signin-modal.component.html","./src/app/shared/signup/signup.component.ts","./src/app/shared/signup/signup.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'tm-car-renting-app-frontend';\n}\n","<app-nav-bar></app-nav-bar>\n<app-footer></app-footer>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavBarComponent } from './core/nav-bar/nav-bar.component';\nimport { SignInComponent } from './shared/sign-in/sign-in.component';\nimport { HomeComponent } from './home/home/home.component';\nimport { FooterComponent } from './core/footer/footer.component';\nimport { SigninModalComponent } from './shared/signin-modal/signin-modal.component';\nimport { SignupComponent } from './shared/signup/signup.component';\nimport { ResetPasswordComponent } from './shared/reset-password/reset-password.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BookVehicleComponent } from './booking/book-vehicle/book-vehicle.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n    SignInComponent,\n    HomeComponent,\n    FooterComponent,\n    SigninModalComponent,\n    SignupComponent,\n    ResetPasswordComponent,\n    BookVehicleComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ModalModule.forRoot(),\n    TabsModule.forRoot(),\n    HttpClientModule,\n    BsDatepickerModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport Stepper from 'bs-stepper';\n\n@Component({\n  selector: 'app-book-vehicle',\n  templateUrl: './book-vehicle.component.html',\n  styleUrls: ['./book-vehicle.component.scss']\n})\nexport class BookVehicleComponent implements OnInit {\n  private stepper: Stepper;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.stepper = new Stepper(document.querySelector('#stepper1'), {\n      linear: false,\n      animation: true\n    })\n  }\n  prev() {\n    this.stepper.previous();\n  }\n\n  next() {\n    this.stepper.next();\n  }\n\n  onSubmit() {\n    return false;\n  }\n}\n","<div class=\"container\">\n  <div id=\"stepper1\" class=\"bs-stepper\">\n    <div class=\"bs-stepper-header\">\n      <div class=\"step\" data-target=\"#test-l-1\">\n        <button class=\"step-trigger\">\n          <span class=\"bs-stepper-circle\">1</span>\n          <span class=\"bs-stepper-label\">Pick Up</span>\n        </button>\n      </div>\n      <div class=\"line\"></div>\n      <div class=\"step\" data-target=\"#test-l-2\">\n        <button class=\"step-trigger\">\n          <span class=\"bs-stepper-circle\">2</span>\n          <span class=\"bs-stepper-label\">Drop Off</span>\n        </button>\n      </div>\n      <div class=\"line\"></div>\n      <div class=\"step\" data-target=\"#test-l-3\">\n        <button class=\"step-trigger\">\n          <span class=\"bs-stepper-circle\">3</span>\n          <span class=\"bs-stepper-label\">Available Vehicles</span>\n        </button>\n      </div>\n      <div class=\"line\"></div>\n      <div class=\"step\" data-target=\"#test-l-4\">\n        <button class=\"step-trigger\">\n          <span class=\"bs-stepper-circle\">4</span>\n          <span class=\"bs-stepper-label\">Confirm Booking</span>\n        </button>\n      </div>\n    </div>\n    <div class=\"bs-stepper-content\">\n      <form (ngSubmit)=\"onSubmit()\">\n        <div id=\"test-l-1\" class=\"content\">\n          <div class=\"form-group\">\n            <div class=\"col-md-4\">\n              <label for=\"pickup\">Select Pick Up Date</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"pickup\"\n                placeholder=\"Select Pick Up Date\"\n                bsDatepicker\n              />\n            </div>\n          </div>\n          <div class=\"col-md-4\">\n            <button (click)=\"next()\" class=\"btn btn-primary\">Next</button>\n          </div>\n        </div>\n        <div id=\"test-l-2\" class=\"content\">\n          <div class=\"form-group row\">\n            <div class=\"col-sm-4\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"location\"\n                placeholder=\"Select Location\"\n              />\n            </div>\n            <div class=\"col-sm-4\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"dropoff\"\n                placeholder=\"Select Drop Off Date\"\n                bsDatepicker\n              />\n            </div>\n          </div>\n          <button (click)=\"prev()\" type=\"button\" class=\"btn btn-default\">\n            Prev\n          </button>\n          <button (click)=\"next()\" class=\"btn btn-primary\">Next</button>\n        </div>\n        <div id=\"test-l-3\" class=\"content text-center\">\n          <button type=\"submit\" class=\"btn btn-primary mt-5\">Submit</button>\n        </div>\n        <div id=\"test-l-4\" class=\"content text-center\">\n          <button type=\"submit\" class=\"btn btn-primary mt-5\">Submit</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"footer\">\n  <div>\n    <a href=\"https://www.upgrad.com/contact/\" target=\"_blank\">Contact Us</a>\n  </div>\n  <div id=\"copyright\">©upGrad</div>\n  <div>\n    <a href=\"https://www.facebook.com/UpGradGlobal\" target=\"_blank\">Facebook</a\n    >&nbsp;\n    <a href=\"https://twitter.com/UpGrad_Edu\" target=\"_blank\">Twitter </a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>nav-bar works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-2\"></div>\n    <div class=\"col-md-8\" style=\"text-align: center\">\n      <h3>Self-drive vehicle rental in Mumbai</h3>\n    </div>\n    <div class=\"col-md-2\"></div>\n  </div>\n  <br />\n  <div class=\"row\">\n    <div class=\"col-md-2\"></div>\n    <div class=\"col-md-8\" style=\"text-align: center\">\n      <button type=\"button\" class=\"btn btn-success\" [routerLink]=\"['/book']\">\n        Book Now <i class=\"fa fa-arrow-circle-right\"></i>\n      </button>\n    </div>\n    <div class=\"col-md-2\"></div>\n  </div>\n</div>\n","export class User {\n    userId?: number;\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    mobileNo: string;\n    jwtToken: string;\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { User } from '../model/user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthServiceService {\n    user = new Subject<User>();\n    constructor(private httpClient: HttpClient) { }\n    signup(user: User) {\n        let url = 'http://localhost:8012/hirewheels/v1/users';\n        return this.httpClient.post(url, user);\n    }\n\n    saveUser(user: User) {\n        localStorage.setItem('user', JSON.stringify(user));\n        localStorage.setItem('token', user.jwtToken);\n    }\n\n    login(credentials): Observable<User> {\n        let url = 'localhost:8012/hirewheels/v1/users/access-token';\n        return this.httpClient.post<User>(url, credentials).pipe(catchError(this.errorHandler),\n            tap((response: User) => {\n                this.saveUser(response);\n                this.user.next(response);\n            }));\n    }\n\n    private errorHandler(errorRes: HttpErrorResponse) {\n        let errorMessage = 'Error!';\n        if (!errorRes.error || !errorRes.error.error) {\n            return throwError(errorMessage);\n        }\n\n        if (errorRes.error && errorRes.error.error) {\n            errorMessage = errorRes.error.error;\n        }\n\n        return throwError(errorMessage);\n    }\n\n    getToken() {\n        return localStorage.getItem('token');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n  email: string\n  mobile: string\n  password: string\n  conpassword: string\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  onSubmit(credentials: NgForm) {\n\n  }\n}\n","<div class=\"container\">\n  <div class=\"card\">\n    <div class=\"card-header\" style=\"text-align: center\">\n      <h3>Reset Password</h3>\n    </div>\n    <div class=\"card-body\">\n      <form (ngSubmit)=\"onSubmit(resetForm.value)\" #resetForm=\"ngForm\">\n        <div class=\"form-group row\">\n          <label for=\"email\" class=\"col-lg-3 col-form-label\">Email ID:</label>\n          <div class=\"col-lg-9\">\n            <input\n              type=\"email\"\n              name=\"email\"\n              [(ngModel)]=\"email\"\n              class=\"form-control\"\n              required\n              #emailid=\"ngModel\"\n              pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n            />\n            <div\n              *ngIf=\"emailid.invalid && (emailid.dirty || emailid.touched)\"\n              class=\"text-danger\"\n            >\n              <div *ngIf=\"emailid.errors.required\">Email id is required.</div>\n              <div *ngIf=\"emailid.errors.pattern\">\n                Enter a valid email address\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"mobile\" class=\"col-lg-3 col-form-label\"\n            >Mobile Number:</label\n          >\n          <div class=\"col-lg-9\">\n            <input\n              type=\"text\"\n              name=\"mobile\"\n              [(ngModel)]=\"mobile\"\n              class=\"form-control\"\n              required\n              #mobileNum=\"ngModel\"\n              pattern=\"[1-9][0-9]{9}\"\n            />\n            <div\n              *ngIf=\"\n                mobileNum.invalid && (mobileNum.dirty || mobileNum.touched)\n              \"\n              class=\"text-danger\"\n            >\n              <div *ngIf=\"mobileNum.errors.required\">\n                Mobile Number is required.\n              </div>\n              <div *ngIf=\"mobileNum.errors.pattern\">\n                Mobile number must have 10 digits only and cannot start with 0.\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"password\" class=\"col-lg-3 col-form-label\"\n            >Password:</label\n          >\n          <div class=\"col-lg-9\">\n            <input\n              type=\"password\"\n              name=\"password\"\n              [(ngModel)]=\"password\"\n              class=\"form-control\"\n              required\n              #passwd=\"ngModel\"\n              pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}\"\n            />\n            <div\n              *ngIf=\"passwd.invalid && (passwd.dirty || passwd.touched)\"\n              class=\"text-danger\"\n            >\n              <div *ngIf=\"passwd.errors.required\">Password is required.</div>\n              <div *ngIf=\"passwd.errors.pattern\">\n                Password should have minimum 5 characters, at least 1 uppercase\n                letter, 1 lowercase letter and 1 number.\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label for=\"conpassword\" class=\"col-lg-3 col-form-label\">\n            Confirm Password:</label\n          >\n          <div class=\"col-lg-9\">\n            <input\n              type=\"password\"\n              name=\"conpassword\"\n              [(ngModel)]=\"conpassword\"\n              class=\"form-control\"\n              required\n              #confirmpasswd=\"ngModel\"\n            />\n            <div\n              *ngIf=\"\n                confirmpasswd.invalid &&\n                (confirmpasswd.dirty || confirmpasswd.touched)\n              \"\n              class=\"text-danger\"\n            >\n              <div *ngIf=\"confirmpasswd.errors.required\">\n                Confirm Password is required.\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <div class=\"col-md-3\"></div>\n          <div class=\"col-md-6\">\n            <input\n              type=\"submit\"\n              class=\"btn btn-primary\"\n              style=\"width: 100%\"\n              value=\"Submit\"\n              [disabled]=\"!resetForm.valid\"\n            />\n          </div>\n          <div class=\"col-md-3\"></div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss']\n})\nexport class SignInComponent implements OnInit {\n\n  constructor() { }\n  email: string\n  password: string\n  ngOnInit(): void {\n  }\n  onSubmit(credentials: NgForm) {\n    console.log(credentials);\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"card\">\n    <div class=\"card-header\" style=\"text-align: center\"><h3>Sign In</h3></div>\n    <div class=\"card-body\">\n      <form (ngSubmit)=\"onSubmit(signinForm.value)\" #signinForm=\"ngForm\">\n        <div class=\"form-group row\">\n          <label for=\"email\" class=\"col-lg-3 col-form-label\">Email ID:</label>\n          <div class=\"col-lg-9\">\n            <input\n              type=\"email\"\n              name=\"email\"\n              [(ngModel)]=\"email\"\n              class=\"form-control\"\n              required\n              #emailid=\"ngModel\"\n              pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n            />\n            <div\n              *ngIf=\"emailid.invalid && (emailid.dirty || emailid.touched)\"\n              class=\"text-danger\"\n            >\n              <div *ngIf=\"emailid.errors.required\">Email id is required.</div>\n              <div *ngIf=\"emailid.errors.pattern\">\n                Enter a valid email address\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"password\" class=\"col-lg-3 col-form-label\"\n            >Password:</label\n          >\n          <div class=\"col-lg-9\">\n            <input\n              type=\"password\"\n              name=\"password\"\n              [(ngModel)]=\"password\"\n              class=\"form-control\"\n              required\n              #passwd=\"ngModel\"\n            />\n            <div\n              *ngIf=\"passwd.invalid && (passwd.dirty || passwd.touched)\"\n              class=\"text-danger\"\n            >\n              <div *ngIf=\"passwd.errors.required\">Password is required.</div>\n            </div>\n          </div>\n        </div>\n        <br />\n        <div class=\"form-group row\">\n          <div class=\"col-md-3\"></div>\n          <div class=\"col-md-6\">\n            <input\n              type=\"submit\"\n              class=\"btn btn-primary\"\n              style=\"width: 100%\"\n              value=\"Sign In\"\n              [disabled]=\"!signinForm.valid\"\n            />\n          </div>\n          <div class=\"col-md-3\"></div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\n\n\n\n@Component({\n  selector: 'app-signin-modal',\n  templateUrl: './signin-modal.component.html',\n  styleUrls: ['./signin-modal.component.scss']\n})\nexport class SigninModalComponent {\n  name = 'Angular';\n  modalRef: BsModalRef | null;\n  modalRef2: BsModalRef;\n  constructor(private modalService: BsModalService) { }\n\n  ngOnInit(): void {\n  }\n  openFirstModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template, { class: 'modal-lg' });\n  }\n  openModalSecond(template: TemplateRef<any>) {\n    this.modalRef2 = this.modalService.show(template, { class: 'modal-lg' });\n  }\n  closeFirstModal() {\n    if (!this.modalRef) {\n      return;\n    }\n\n    this.modalRef.hide();\n    this.modalRef = null;\n  }\n\n  closeModal() {\n    this.modalRef2.hide();\n  }\n}\n\n\n","<button class=\"btn btn-link\" id=\"sign\" (click)=\"openFirstModal(templatefirst)\">\n  Sign In\n</button>\n\n<ng-template #templatefirst>\n  <div class=\"modal-header\">\n    <button\n      type=\"button\"\n      class=\"close pull-right\"\n      aria-label=\"Close\"\n      (click)=\"modalRef.hide()\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <tabset>\n      <tab id=\"tab1\">\n        <ng-template tabHeading\n          ><div id=\"signintab\">\n            <i class=\"fa fa-sign-in\"></i> &nbsp;Sign in\n          </div></ng-template\n        >\n        <app-sign-in></app-sign-in>\n\n        <div class=\"row\">\n          <div class=\"col-md-3\"></div>\n          <div class=\"col-md-6\" style=\"text-align: center\">\n            <button\n              type=\"button\"\n              class=\"btn btn-link\"\n              (click)=\"openModalSecond(templateSecond)\"\n            >\n              Forgot Password\n            </button>\n          </div>\n          <div class=\"col-md-3\"></div>\n        </div>\n        <div>\n          <p style=\"text-align: center\">\n            Don't have an account? <a href=\"#\">Sign Up</a>\n          </p>\n        </div>\n      </tab>\n      <tab id=\"tab2\">\n        <ng-template tabHeading\n          ><div id=\"signuptab\">\n            <i class=\"fa fa-user-plus\"></i> &nbsp;Sign up\n          </div></ng-template\n        >\n        <app-signup></app-signup>\n      </tab>\n    </tabset>\n    <br />\n  </div>\n</ng-template>\n\n<ng-template #templateSecond>\n  <div class=\"modal-header\">\n    <button\n      type=\"button\"\n      class=\"close pull-right\"\n      aria-label=\"Close\"\n      (click)=\"modalRef2.hide()\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <app-reset-password></app-reset-password>\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/model/user';\n\nimport { AuthServiceService } from '../auth-service.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  signup = new User();\n  constructor(private router: Router, private authService: AuthServiceService) { }\n\n  ngOnInit(): void {\n  }\n  signupUser() {\n    this.authService.signup(this.signup).subscribe(result => {\n      //success\n      console.log(result);\n      this.authService.saveUser(this.signup);\n      alert('Signup successful');\n\n    }, err => {\n      alert(JSON.stringify(err));\n    });\n  }\n}\n","<div class=\"container\">\n  <div class=\"card\">\n    <div class=\"card-header\" style=\"text-align: center\"><h3>Sign Up</h3></div>\n    <div class=\"card-body\">\n      <form (ngSubmit)=\"signupUser()\" #signupForm=\"ngForm\">\n        <div class=\"form-group row\">\n          <label for=\"firstname\" class=\"col-lg-3 col-form-label\"\n            >First Name:</label\n          >\n          <div class=\"col-lg-9\">\n            <input\n              type=\"text\"\n              name=\"firstname\"\n              [(ngModel)]=\"signup.firstName\"\n              class=\"form-control\"\n              required\n              #firstname=\"ngModel\"\n            />\n            <div\n              *ngIf=\"\n                firstname.invalid && (firstname.dirty || firstname.touched)\n              \"\n              class=\"text-danger\"\n            >\n              <div *ngIf=\"firstname.errors.required\">\n                First Name is required.\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"lastname\" class=\"col-lg-3 col-form-label\"\n            >Last Name:</label\n          >\n          <div class=\"col-lg-9\">\n            <input\n              type=\"text\"\n              name=\"lastname\"\n              [(ngModel)]=\"signup.lastName\"\n              class=\"form-control\"\n              required\n              #lastname=\"ngModel\"\n            />\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"email\" class=\"col-lg-3 col-form-label\">Email ID:</label>\n          <div class=\"col-lg-9\">\n            <input\n              type=\"email\"\n              name=\"email\"\n              [(ngModel)]=\"signup.email\"\n              class=\"form-control\"\n              required\n              #emailid=\"ngModel\"\n              pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n            />\n            <div\n              *ngIf=\"emailid.invalid && (emailid.dirty || emailid.touched)\"\n              class=\"text-danger\"\n            >\n              <div *ngIf=\"emailid.errors.required\">Email id is required.</div>\n              <div *ngIf=\"emailid.errors.pattern\">\n                Enter a valid email address\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"mobile\" class=\"col-lg-3 col-form-label\"\n            >Mobile Number:</label\n          >\n          <div class=\"col-lg-9\">\n            <input\n              type=\"text\"\n              name=\"mobile\"\n              [(ngModel)]=\"signup.mobileNo\"\n              class=\"form-control\"\n              required\n              #mobileNum=\"ngModel\"\n              pattern=\"[1-9][0-9]{9}\"\n            />\n            <div\n              *ngIf=\"\n                mobileNum.invalid && (mobileNum.dirty || mobileNum.touched)\n              \"\n              class=\"text-danger\"\n            >\n              <div *ngIf=\"mobileNum.errors.required\">\n                Mobile Number is required.\n              </div>\n              <div *ngIf=\"mobileNum.errors.pattern\">\n                Mobile number must have 10 digits only and cannot start with 0.\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"password\" class=\"col-lg-3 col-form-label\"\n            >Password:</label\n          >\n          <div class=\"col-lg-9\">\n            <input\n              type=\"password\"\n              name=\"password\"\n              [(ngModel)]=\"signup.password\"\n              class=\"form-control\"\n              required\n              #passwd=\"ngModel\"\n              pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}\"\n            />\n            <div\n              *ngIf=\"passwd.invalid && (passwd.dirty || passwd.touched)\"\n              class=\"text-danger\"\n            >\n              <div *ngIf=\"passwd.errors.required\">Password is required.</div>\n              <div *ngIf=\"passwd.errors.pattern\">\n                Password should have minimum 5 characters, at least 1 uppercase\n                letter, 1 lowercase letter and 1 number.\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label for=\"conpassword\" class=\"col-lg-3 col-form-label\">\n            Confirm Password:</label\n          >\n          <div class=\"col-lg-9\">\n            <input\n              type=\"password\"\n              name=\"conpassword\"\n              [(ngModel)]=\"signup.password\"\n              class=\"form-control\"\n              required\n              #confirmpasswd=\"ngModel\"\n            />\n            <div\n              *ngIf=\"\n                confirmpasswd.invalid &&\n                (confirmpasswd.dirty || confirmpasswd.touched)\n              \"\n              class=\"text-danger\"\n            >\n              <div *ngIf=\"confirmpasswd.errors.required\">\n                Confirm Password is required.\n              </div>\n            </div>\n          </div>\n        </div>\n        <br />\n        <div class=\"form-group row\">\n          <div class=\"col-md-3\"></div>\n          <div class=\"col-md-6\">\n            <input\n              type=\"submit\"\n              class=\"btn btn-primary\"\n              value=\"Sign In\"\n              [disabled]=\"!signupForm.valid\"\n              style=\"width: 100%\"\n            />\n          </div>\n          <div class=\"col-md-3\"></div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}