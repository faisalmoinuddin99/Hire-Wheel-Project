{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/booking/book-vehicle/book-vehicle.component.ts","webpack:///src/app/booking/book-vehicle/book-vehicle.component.html","webpack:///src/app/booking/booking-routing.module.ts","webpack:///src/app/core/core-routing.module.ts","webpack:///src/app/core/footer/footer.component.ts","webpack:///src/app/core/footer/footer.component.html","webpack:///src/app/core/nav-bar/nav-bar.component.ts","webpack:///src/app/core/nav-bar/nav-bar.component.html","webpack:///src/app/home/home/home.component.ts","webpack:///src/app/home/home/home.component.html","webpack:///src/app/models/user.ts","webpack:///src/app/shared/auth-service.service.ts","webpack:///src/app/shared/reset-password/reset-password.component.ts","webpack:///src/app/shared/reset-password/reset-password.component.html","webpack:///src/app/shared/signin-modal/signin-modal.component.ts","webpack:///src/app/shared/signin-modal/signin-modal.component.html","webpack:///src/app/shared/signin/signin.component.ts","webpack:///src/app/shared/signin/signin.component.html","webpack:///src/app/shared/signup/signup.component.ts","webpack:///src/app/shared/signup/signup.component.html","webpack:///src/app/user/add-vehicle/add-vehicle.component.ts","webpack:///src/app/user/add-vehicle/add-vehicle.component.html","webpack:///src/app/user/admin-dashboard/admin-dashboard.component.ts","webpack:///src/app/user/admin-dashboard/admin-dashboard.component.html","webpack:///src/app/user/user-routing.module.ts","webpack:///src/app/user/vehicle-service.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","BookVehicleComponent","stepper","document","querySelector","linear","animation","previous","next","onSubmit","prev","BookingRoutingModule","CoreRoutingModule","FooterComponent","NavBarComponent","HomeComponent","User","AuthServiceService","httpClient","user","url","post","localStorage","setItem","JSON","stringify","jwtToken","credentials","pipe","errorHandler","response","saveUser","errorRes","errorMessage","error","getItem","providedIn","ResetPasswordComponent","modalRef","modalRef2","SigninModalComponent","modalService","name","template","show","hide","openFirstModal","SigninComponent","console","log","SignupComponent","router","authService","signup","subscribe","result","alert","err","signupUser","AddVehicleComponent","location","vehicelService","formBuilder","vehicleForm","group","vehicleName","required","vehicleNumber","vehicleCategory","fuelType","vehiclesubCategory","vehicleColor","availLocation","back","goBack","addVehicle","AdminDashboardComponent","vehicleService","getAllVehicle","vehicles","UserRoutingModule","VehicleServiceService","get","vehicle","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BookVehicleComponent } from './booking/book-vehicle/book-vehicle.component';\nimport { BookingRoutingModule } from './booking/booking-routing.module';\nimport { CoreRoutingModule } from './core/core-routing.module';\nimport { FooterComponent } from './core/footer/footer.component';\nimport { NavBarComponent } from './core/nav-bar/nav-bar.component';\nimport { HomeComponent } from './home/home/home.component';\nimport { SigninModalComponent } from './shared/signin-modal/signin-modal.component';\nimport { SigninComponent } from './shared/signin/signin.component';\nimport { AdminDashboardComponent } from './user/admin-dashboard/admin-dashboard.component';\nimport { UserRoutingModule } from './user/user-routing.module';\n\n\nconst routes: Routes = [\n  {path:'signmodal',component:SigninModalComponent},\n {path:'',component:HomeComponent},\n\n \n  \n \n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes),BookingRoutingModule,CoreRoutingModule,UserRoutingModule],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'tm-car-renting-app-frontend';\n}\n","\n<app-nav-bar></app-nav-bar>\n<app-footer></app-footer>\n<router-outlet></router-outlet> ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavBarComponent } from './core/nav-bar/nav-bar.component';\nimport { HomeComponent } from './home/home/home.component';\nimport { FooterComponent } from './core/footer/footer.component';\nimport { SigninModalComponent } from './shared/signin-modal/signin-modal.component';\nimport { SigninComponent } from './shared/signin/signin.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { SignupComponent } from './shared/signup/signup.component';\nimport { ValidateEqualModule } from 'ng-validate-equal';\nimport { ResetPasswordComponent } from './shared/reset-password/reset-password.component';\nimport { BookVehicleComponent } from './booking/book-vehicle/book-vehicle.component';\nimport { AddVehicleComponent } from './user/add-vehicle/add-vehicle.component';\nimport { AdminDashboardComponent } from './user/admin-dashboard/admin-dashboard.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n    HomeComponent,\n    FooterComponent,\n    SigninModalComponent,\n    SigninComponent,\n    SignupComponent,\n    ResetPasswordComponent,\n    BookVehicleComponent,\n    AddVehicleComponent,\n    AdminDashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ModalModule.forRoot(),\n    TabsModule.forRoot(),\n    HttpClientModule,\n    BsDatepickerModule.forRoot()\n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport Stepper from 'bs-stepper';\n\n@Component({\n  selector: 'app-book-vehicle',\n  templateUrl: './book-vehicle.component.html',\n  styleUrls: ['./book-vehicle.component.scss']\n})\nexport class BookVehicleComponent implements OnInit {\n  private stepper: Stepper;\n \n  constructor() { }\n\n  ngOnInit(): void {\n    this.stepper = new Stepper(document.querySelector('#stepper1'), {\n      linear: false,\n      animation: true\n    })\n  }\n  prev(){\n    this.stepper.previous();\n  }\n\n  next() {\n    this.stepper.next();\n  }\n\n  onSubmit() {\n    return false;\n  }\n}\n","<div class=\"container\">\n    \n    <div id=\"stepper1\" class=\"bs-stepper\">\n      <div class=\"bs-stepper-header\">\n        <div class=\"step\" data-target=\"#test-l-1\">\n          <button class=\"step-trigger\">\n            <span class=\"bs-stepper-circle\">1</span>\n            <span class=\"bs-stepper-label\">Pick Up</span>\n          </button>\n        </div>\n        <div class=\"line\"></div>\n        <div class=\"step\" data-target=\"#test-l-2\">\n          <button class=\"step-trigger\">\n            <span class=\"bs-stepper-circle\">2</span>\n            <span class=\"bs-stepper-label\">Drop Off</span>\n          </button>\n        </div>\n        <div class=\"line\"></div>\n        <div class=\"step\" data-target=\"#test-l-3\">\n          <button class=\"step-trigger\">\n            <span class=\"bs-stepper-circle\">3</span>\n            <span class=\"bs-stepper-label\">Available Vehicles</span>\n          </button>\n        </div>\n        <div class=\"line\"></div>\n        <div class=\"step\" data-target=\"#test-l-4\">\n          <button class=\"step-trigger\">\n            <span class=\"bs-stepper-circle\">4</span>\n            <span class=\"bs-stepper-label\">Confirm Booking</span>\n          </button>\n        </div>\n\n      </div>\n      <div class=\"bs-stepper-content\">\n        <form (ngSubmit)=\"onSubmit()\">\n          <div id=\"test-l-1\" class=\"content\">\n            <div class=\"form-group\">\n                <div class=\"col-md-4\">\n              <label for=\"pickup\">Select Pick Up Date</label>\n              <input type=\"text\" class=\"form-control\" id=\"pickup\" placeholder=\"Select Pick Up Date\" bsDatepicker/>\n            </div>\n            </div>\n            <div class=\"col-md-4\">\n            <button (click)=\"next()\" class=\"btn btn-primary\">Next</button></div>\n          </div>\n          <div id=\"test-l-2\" class=\"content\">\n          \n            <div class=\"form-group row\">\n              <div class=\"col-sm-4\">\n              <input type=\"text\" class=\"form-control\" id=\"location\" placeholder=\"Select Location\" />\n            </div>\n            <div class=\"col-sm-4\">\n              \n                <input type=\"text\" class=\"form-control\" id=\"dropoff\" placeholder=\"Select Drop Off Date\" bsDatepicker />\n              </div>\n              </div>\n              <button (click)=\"prev()\" type=\"button\" class=\"btn btn-default\">Prev</button>\n            <button (click)=\"next()\" class=\"btn btn-primary\">Next</button>\n          </div>\n          <div id=\"test-l-3\" class=\"content text-center\">\n            <button type=\"submit\" class=\"btn btn-primary mt-5\">Submit</button>\n          </div>\n          <div id=\"test-l-4\" class=\"content text-center\">\n            <button type=\"submit\" class=\"btn btn-primary mt-5\">Submit</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n  ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BookVehicleComponent } from './book-vehicle/book-vehicle.component';\n\nconst routes: Routes = [\n    {path:'book',component:BookVehicleComponent},\n    \n    \n   \n    \n  ];\n  @NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n  })\n  export class BookingRoutingModule{}\n  ","import { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\n\nconst routes: Routes = [\n    \n    \n    \n   \n    \n  ];\n  @NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n  })\n  export class CoreRoutingModule{}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<html>\n    <head>\n\n    </head>\n    <body>\n        <div class=\"footer\">\n               \n                    <div><a href=\"https://www.upgrad.com/contact/\" target=\"_blank\">Contact Us</a></div>\n                    <div id=\"copyright\">©upGrad</div>\n                    <div>\n                        <a href=\"https://www.facebook.com/UpGradGlobal\" target=\"_blank\">Facebook</a>&nbsp;\n                        <a href=\"https://twitter.com/UpGrad_Edu\" target=\"_blank\">Twitter </a>\n                    </div>                \n                \n        </div>\n    </body>\n</html>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<html>\n  <head>\n    <title>Homepage</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n</head>\n<body>\n    <div>\n  <nav class=\"navbar navbar-expand-lg\">\n      <div class=\"container-fluid\">\n       <div> <i class=\"fa fa-car\" aria-hidden=\"true\"><button id=\"hire\" class=\"btn btn-link\" [routerLink]=\"['']\" >HireWheels</button></i></div>\n        <div><app-signin-modal></app-signin-modal></div>\n      </div>\n      \n     \n  </nav>\n</div>\n</body>\n</html>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<html>\n    <head>\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n    </head>\n    <body>\n  \n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-md-2\"></div>\n                <div class=\"col-md-8\" style=\"text-align: center;\"><h3>Self-drive vehicle rental in Mumbai</h3></div>\n                <div class=\"col-md-2\"></div>\n            </div><br>\n            <div class=\"row\">\n                <div class=\"col-md-2\"></div>\n                <div class=\"col-md-8\" style=\"text-align: center;\"><button type=\"button\" class=\"btn btn-success\" [routerLink]=\"['/book']\">Book Now <i class=\"fa fa-arrow-circle-right\"></i></button></div>\n                <div class=\"col-md-2\"></div>\n            </div>\n            </div>\n            \n            \n    </body>\n</html>\n","export class User{\n    userId?:number;\n    firstName: string;\n\tlastName: string;\n\temail: string;\n    password :string;\n    mobileNo: string;\n    jwtToken: string;\n}","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpErrorResponse } from '@angular/common/http';\nimport { User } from '../models/user';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { catchError,tap} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\nuser=new Subject<User>();\n  constructor(private httpClient:HttpClient) { }\n  signup(user:User){\n    let url='http://localhost:8012/hirewheels/v1/users';\n    return this.httpClient.post(url,user);\n  }\n\n  saveUser(user:User){\n    localStorage.setItem('user',JSON.stringify(user));\n    localStorage.setItem('token',user.jwtToken);\n  }\n\n  login(credentials):Observable<User>{\n    let url='localhost:8012/hirewheels/v1/users/access-token';\n    return this.httpClient.post<User>(url,credentials).pipe(catchError(this.errorHandler),\n    tap((response:User)=>{\n      this.saveUser(response);\n      this.user.next(response);\n    }));\n  }\n\n  private errorHandler(errorRes: HttpErrorResponse) {\n    let errorMessage = 'Error!';\n    if (!errorRes.error || !errorRes.error.error) {\n      return throwError(errorMessage);\n    }\n\n    if (errorRes.error && errorRes.error.error) {\n      errorMessage = errorRes.error.error;\n    }\n\n    return throwError(errorMessage);\n  }\n\n  getToken(){\n    return localStorage.getItem('token');\n}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\nemail:string\nmobile:string\npassword:string\nconpassword:string\n  constructor() { }\n\n  ngOnInit(): void {\n  }\nonSubmit(credentials:NgForm){\n\n}\n}\n","<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-header\" style=\"text-align: center;\"><h3>Reset Password</h3></div>\n        <div class=\"card-body\">\n             <form (ngSubmit)='onSubmit(resetForm.value)' #resetForm=\"ngForm\">\n                 <div class=\"form-group row\">\n                     <label for=\"email\" class=\"col-lg-3 col-form-label\">Email ID:</label>\n                     <div class=\"col-lg-9\"><input type=\"email\" name=\"email\" [(ngModel)]=\"email\" class=\"form-control\" required #emailid=\"ngModel\"\n                     pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\">\n                     <div *ngIf=\"emailid.invalid && (emailid.dirty || emailid.touched)\" class=\"text-danger\">\n                         <div *ngIf=\"emailid.errors.required\">\n                             Email id is required.\n                         </div>\n                         <div *ngIf=\"emailid.errors.pattern\">\n                             Enter a valid email address\n                         </div>\n     \n                     </div>\n                 </div>\n                 </div>\n \n                 <div class=\"form-group row\">\n                    <label for=\"mobile\" class=\"col-lg-3 col-form-label\">Mobile Number:</label>\n                    <div class=\"col-lg-9\"><input type=\"text\" name=\"mobile\" [(ngModel)]=\"mobile\" class=\"form-control\" required \n                        #mobileNum=\"ngModel\" pattern=[1-9][0-9]{9}>\n                    <div *ngIf=\"mobileNum.invalid && (mobileNum.dirty || mobileNum.touched)\" class=\"text-danger\">\n                        <div *ngIf=\"mobileNum.errors.required\">\n                            Mobile Number is required.\n                        </div>\n                        <div *ngIf=\"mobileNum.errors.pattern\">\n                            Mobile number must have 10 digits only and cannot start with 0.\n                        </div>\n    \n                    </div>\n                    </div>\n                </div>\n\n\n \n                 <div class=\"form-group row\">\n                 <label for=\"password\" class=\"col-lg-3 col-form-label\">Password:</label>\n                 <div class=\"col-lg-9\"><input type=\"password\" name=\"password\" [(ngModel)]=\"password\" class=\"form-control\" required \n                    #passwd=\"ngModel\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}\">\n                 <div *ngIf=\"passwd.invalid && (passwd.dirty || passwd.touched)\" class=\"text-danger\">\n                     <div *ngIf=\"passwd.errors.required\">\n                         Password is required.\n                     </div>\n                     <div *ngIf=\"passwd.errors.pattern\">\n                        Password should have minimum 5 characters, at least 1 uppercase letter, 1 lowercase letter and 1 number.\n                     </div>\n \n                 </div>\n                </div>\n             </div>\n             <div class=\"form-group row\">\n                <label for=\"conpassword\" class=\"col-lg-3 col-form-label\"> Confirm Password:</label>\n                <div class=\"col-lg-9\"><input type=\"password\" name=\"conpassword\" [(ngModel)]=\"conpassword\" class=\"form-control\" required #confirmpasswd=\"ngModel\">\n                <div *ngIf=\"confirmpasswd.invalid && (confirmpasswd.dirty || confirmpasswd.touched)\" class=\"text-danger\">\n                    <div *ngIf=\"confirmpasswd.errors.required\">\n                        Confirm Password is required.\n                    </div>\n\n                </div>\n            </div>\n            </div>\n  \n\n             <div class=\"form-group row\">\n                 <div class=\"col-md-3\"></div>\n                 <div class=\"col-md-6\"><input type=\"submit\" class=\"btn btn-primary\" style=\"width: 100%;\" value=\"Submit\" [disabled]=\"!resetForm.valid\"></div>\n                 <div class=\"col-md-3\"></div>\n             </div>\n                       \n                 \n             </form>\n         </div>\n         </div>\n       \n </div>\n \n","import { Component, OnInit,ViewChild, TemplateRef} from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\n\n \n\n@Component({\n  selector: 'app-signin-modal',\n  templateUrl: './signin-modal.component.html',\n  styleUrls: ['./signin-modal.component.scss']\n})\nexport class SigninModalComponent {\n  name = 'Angular';\nmodalRef:BsModalRef | null;\nmodalRef2:BsModalRef;\nconstructor(private modalService: BsModalService) {}\n \nngOnInit(): void {\n}\nopenFirstModal(template: TemplateRef<any>) {\n  this.modalRef = this.modalService.show(template, { class: 'modal-lg' });\n}\nopenModalSecond(template: TemplateRef<any>) {\n  this.modalRef2 = this.modalService.show(template, { class: 'modal-lg' });\n}\ncloseFirstModal() {\n  if (!this.modalRef) {\n    return;\n  }\n\n  this.modalRef.hide();\n  this.modalRef = null;\n}\n\ncloseModal(){\n    this.modalRef2.hide();\n}\n}\n\n\n","<html>\n    <head>\n        <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\n\n\n    </head>\n\n<body>\n\n<button class=\"btn btn-link\" id=\"sign\" (click)=\"openFirstModal(templatefirst)\">Sign In</button>\n   \n<ng-template #templatefirst>\n  <div class=\"modal-header\">\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <tabset>\n      <tab id=\"tab1\">\n          <ng-template tabHeading><div id=\"signintab\"><i class=\"fa fa-sign-in\"></i> &nbsp;Sign in</div></ng-template>\n          <app-signin></app-signin>\n      \n          <div class=\"row\">\n            <div class=\"col-md-3\"></div>\n            <div class=\"col-md-6\" style=\"text-align: center;\"><button type=\"button\" class=\"btn btn-link\" (click)=\"openModalSecond(templateSecond)\">Forgot Password</button></div>\n            <div class=\"col-md-3\"></div>\n          </div>\n          <div>\n            <p style=\"text-align: center;\">Don't have an account? <a href=\"#\">Sign Up</a></p>\n          </div>\n          \n      </tab>\n      <tab id=\"tab2\">\n      <ng-template tabHeading><div id=\"signuptab\"><i class=\"fa fa-user-plus\"></i> &nbsp;Sign up</div></ng-template>\n      <app-signup></app-signup>\n  </tab>\n    </tabset>\n     <br/>\n    \n  </div>\n</ng-template>\n\n<ng-template #templateSecond>\n  <div class=\"modal-header\">\n    \n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef2.hide()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <app-reset-password></app-reset-password>\n  </div>\n</ng-template>\n\n\n</body>\n\n  </html>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent implements OnInit {\n\n  constructor() { }\nemail:string\npassword:string\n  ngOnInit(): void {\n  }\nonSubmit(credentials:NgForm){\n  console.log(credentials);\n}\n}\n","<div class=\"container\">\n   <div class=\"card\">\n       <div class=\"card-header\" style=\"text-align: center;\"><h3> Sign In</h3></div>\n       <div class=\"card-body\">\n            <form (ngSubmit)='onSubmit(signinForm.value)' #signinForm=\"ngForm\">\n                <div class=\"form-group row\">\n                    <label for=\"email\" class=\"col-lg-3 col-form-label\">Email ID:</label>\n                    <div class=\"col-lg-9\"><input type=\"email\" name=\"email\" [(ngModel)]=\"email\" class=\"form-control\" required #emailid=\"ngModel\"\n                    pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\">\n                    <div *ngIf=\"emailid.invalid && (emailid.dirty || emailid.touched)\" class=\"text-danger\">\n                        <div *ngIf=\"emailid.errors.required\">\n                            Email id is required.\n                        </div>\n                        <div *ngIf=\"emailid.errors.pattern\">\n                            Enter a valid email address\n                        </div>\n    \n                    </div>\n                </div>\n                </div>\n\n                <div class=\"form-group row\">\n                <label for=\"password\" class=\"col-lg-3 col-form-label\">Password:</label>\n                <div class=\"col-lg-9\"><input type=\"password\" name=\"password\" [(ngModel)]=\"password\" class=\"form-control\" required \n                    #passwd=\"ngModel\">\n                <div *ngIf=\"passwd.invalid && (passwd.dirty || passwd.touched)\" class=\"text-danger\">\n                    <div *ngIf=\"passwd.errors.required\">\n                        Password is required.\n                    </div>\n\n                </div>\n            </div>\n            </div><br>\n            <div class=\"form-group row\">\n                <div class=\"col-md-3\"></div>\n                <div class=\"col-md-6\"><input type=\"submit\" class=\"btn btn-primary\" style=\"width: 100%;\" value=\"Sign In\" [disabled]=\"!signinForm.valid\"></div>\n                <div class=\"col-md-3\"></div>\n            </div>\n                      \n                \n            </form>\n        </div>\n        </div>\n      \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/models/user';\nimport { AuthServiceService } from '../auth-service.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\nsignup=new User();\n  constructor(private router:Router, private authService:AuthServiceService) { }\n\n  ngOnInit(): void {\n  }\n  signupUser(){\n    this.authService.signup(this.signup).subscribe(result =>{\n        //success\n        console.log(result);\n        this.authService.saveUser(this.signup);\n        alert('Signup successful');\n      \n    },err =>{\n      alert(JSON.stringify(err));\n    });\n  }\n}\n","<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-header\" style=\"text-align: center;\"> <h3>Sign Up </h3></div>\n        <div class=\"card-body\">\n             <form (ngSubmit)=\"signupUser()\" #signupForm=\"ngForm\">\n                 <div class=\"form-group row\">\n                     <label for=\"firstname\" class=\"col-lg-3 col-form-label\">First Name:</label>\n                     <div class=\"col-lg-9\"><input type=\"text\" name=\"firstname\" [(ngModel)]=\"signup.firstName\" class=\"form-control\" required #firstname=\"ngModel\">\n                     <div *ngIf=\"firstname.invalid && (firstname.dirty || firstname.touched)\" class=\"text-danger\">\n                         <div *ngIf=\"firstname.errors.required\">\n                             First Name is required.\n                         </div>\n                        \n     \n                     </div>\n                     </div>\n                 </div>\n\n                 <div class=\"form-group row\">\n                    <label for=\"lastname\" class=\"col-lg-3 col-form-label\">Last Name:</label>\n                    <div class=\"col-lg-9\"><input type=\"text\" name=\"lastname\" [(ngModel)]=\"signup.lastName\" class=\"form-control\" required #lastname=\"ngModel\">\n                   \n                    </div>\n                </div>\n\n                <div class=\"form-group row\">\n                    <label for=\"email\" class=\"col-lg-3 col-form-label\">Email ID:</label>\n                    <div class=\"col-lg-9\"><input type=\"email\" name=\"email\" [(ngModel)]=\"signup.email\" class=\"form-control\" required #emailid=\"ngModel\"\n                    pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\">\n                    <div *ngIf=\"emailid.invalid && (emailid.dirty || emailid.touched)\" class=\"text-danger\">\n                        <div *ngIf=\"emailid.errors.required\">\n                            Email id is required.\n                        </div>\n                        <div *ngIf=\"emailid.errors.pattern\">\n                            Enter a valid email address\n                        </div>\n    \n                    </div>\n                    </div>\n                </div>\n\n                <div class=\"form-group row\">\n                    <label for=\"mobile\" class=\"col-lg-3 col-form-label\">Mobile Number:</label>\n                    <div class=\"col-lg-9\"><input type=\"text\" name=\"mobile\" [(ngModel)]=\"signup.mobileNo\" class=\"form-control\" required \n                        #mobileNum=\"ngModel\" pattern=[1-9][0-9]{9}>\n                    <div *ngIf=\"mobileNum.invalid && (mobileNum.dirty || mobileNum.touched)\" class=\"text-danger\">\n                        <div *ngIf=\"mobileNum.errors.required\">\n                            Mobile Number is required.\n                        </div>\n                        <div *ngIf=\"mobileNum.errors.pattern\">\n                            Mobile number must have 10 digits only and cannot start with 0.\n                        </div>\n    \n                    </div>\n                    </div>\n                </div>\n\n\n \n                 <div class=\"form-group row\">\n                 <label for=\"password\" class=\"col-lg-3 col-form-label\">Password:</label>\n                 <div class=\"col-lg-9\"><input type=\"password\" name=\"password\" [(ngModel)]=\"signup.password\" class=\"form-control\" required \n                    #passwd=\"ngModel\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}\">\n                 <div *ngIf=\"passwd.invalid && (passwd.dirty || passwd.touched)\" class=\"text-danger\">\n                     <div *ngIf=\"passwd.errors.required\">\n                         Password is required.\n                     </div>\n                     <div *ngIf=\"passwd.errors.pattern\">\n                        Password should have minimum 5 characters, at least 1 uppercase letter, 1 lowercase letter and 1 number.\n                     </div>\n \n                 </div>\n                </div>\n             </div>\n             <div class=\"form-group row\">\n                <label for=\"conpassword\" class=\"col-lg-3 col-form-label\"> Confirm Password:</label>\n                <div class=\"col-lg-9\"><input type=\"password\" name=\"conpassword\" [(ngModel)]=\"signup.password\" class=\"form-control\" required #confirmpasswd=\"ngModel\">\n                <div *ngIf=\"confirmpasswd.invalid && (confirmpasswd.dirty || confirmpasswd.touched)\" class=\"text-danger\">\n                    <div *ngIf=\"confirmpasswd.errors.required\">\n                        Confirm Password is required.\n                    </div>\n\n                </div>\n            </div>\n            </div>\n             <br>\n             <div class=\"form-group row\">\n                 <div class=\"col-md-3\"></div>\n                <div class=\"col-md-6\"><input type=\"submit\" class=\"btn btn-primary\" value=\"Sign In\" [disabled]=\"!signupForm.valid\" style=\"width: 100%;\"></div>\n                <div class=\"col-md-3\"></div>\n             </div>\n                       \n                 \n             </form>\n         </div>\n         </div>\n       \n </div>\n \n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { Location} from '@angular/common';\nimport { VehicleServiceService } from '../vehicle-service.service';\n\n@Component({\n  selector: 'app-add-vehicle',\n  templateUrl: './add-vehicle.component.html',\n  styleUrls: ['./add-vehicle.component.scss']\n})\nexport class AddVehicleComponent implements OnInit {\n  vehicleForm:FormGroup\n  constructor(private location:Location,private vehicelService:VehicleServiceService,private formBuilder:FormBuilder) { }\n\n  ngOnInit(): void {\n    this.vehicleForm=this.formBuilder.group({\n      vehicleName:['',Validators.required],\n      vehicleNumber:['',Validators.required],\n      vehicleCategory:['',Validators.required],\n      fuelType:['',Validators.required],\n      vehiclesubCategory:['',Validators.required],\n      vehicleColor:['',Validators.required],\n      availLocation:['',Validators.required],\n      url:['',Validators.required]\n\n    })\n  }\n\ngoBack(){\n  this.location.back();\n}\naddVehicle(){\n  \n}\n}\n","<div class=\"container\">\n    <button type='button' class=\"btn btn-link\" (click)=\"goBack()\">< Back to dashboard</button>\n    <div class=\"card\">\n        <div class=\"card-header\" style=\"text-align: center;\"><h3>Add Vehicle</h3></div>\n        <div class=\"card-body\">\n             <form  [formGroup]=\"vehicleForm\" (ngSubmit)=\"addVehicle()\">\n                 <div class=\"form-group row\">\n                     <div class=\"col-md-6\">\n                        <label for=\"name\" class=\"form-label\">Vehicle Name</label>\n                        \n                            <input type=\"text\" class=\"form-control form-control-sm\" id=\"name\"\n                                formControlName=\"vehicleName\" [ngClass]=\"{\n                              'is-invalid': \n                                (vehicleForm.get('vehicleName').touched ||\n                                  vehicleForm.get('vehicleName').dirty) &&\n                                !vehicleForm.get('vehicleName').valid\n                            }\" />\n                            <span class=\"invalid-feedback\">\n                                <span *ngIf=\"vehicleForm.get('vehicleName').errors?.required\">\n                                    Vehicle Name is required.\n                                </span>\n                               \n                            </span>\n                        \n                    </div>\n                    <div class=\"col-md-6\">\n                        <label for=\"number\" class=\"form-label\">Vehicle Number</label>\n                        \n                        <input type=\"text\" class=\"form-control form-control-sm\" id=\"number\"\n                            formControlName=\"vehicleNumber\" [ngClass]=\"{\n                          'is-invalid': \n                            (vehicleForm.get('vehicleName').touched ||\n                              vehicleForm.get('vehicleNumber').dirty) &&\n                            !vehicleForm.get('vehicleNumber').valid\n                        }\" />\n                        <span class=\"invalid-feedback\">\n                            <span *ngIf=\"vehicleForm.get('vehicleName').errors?.required\">\n                                Vehicle Number is required.\n                            </span>\n                           \n                        </span>\n                       </div>\n                 \n                 </div>\n                 <div class=\"form-group row\">\n                     <div class=\"col-md-6\">\n                    <label for=\"category\" class=\"form-label\">Vehicle Category</label>\n                        \n                    <input type=\"text\" class=\"form-control form-control-sm\" id=\"category\"\n                        formControlName=\"vehicleCategory\" [ngClass]=\"{\n                      'is-invalid': \n                        (vehicleForm.get('vehicleCategory').touched ||\n                          vehicleForm.get('vehicleCategory').dirty) &&\n                        !vehicleForm.get('vehicleCategory').valid\n                    }\" />\n                    <span class=\"invalid-feedback\">\n                        <span *ngIf=\"vehicleForm.get('vehicleCategory').errors?.required\">\n                            Vehicle Category is required.\n                        </span>\n                       \n                    </span>\n                </div>\n                   <div class=\"col-md-6\">\n                    <label for=\"type\" class=\"form-label\">Fuel Type</label>\n                        \n                    <input type=\"text\" class=\"form-control form-control-sm\" id=\"type\"\n                        formControlName=\"fuelType\" [ngClass]=\"{\n                      'is-invalid': \n                        (vehicleForm.get('fuelType').touched ||\n                          vehicleForm.get('fuelType').dirty) &&\n                        !vehicleForm.get('fuelType').valid\n                    }\" />\n                    <span class=\"invalid-feedback\">\n                        <span *ngIf=\"vehicleForm.get('fuelType').errors?.required\">\n                            Fuel Type is required.\n                        </span>\n                       \n                    </span>\n                      </div>\n                \n                </div>\n                <div class=\"form-group row\">\n                    <div class=\"col-md-6\">\n                        <label for=\"subcategory\" class=\"form-label\">Vehicle Subcategory</label>\n                        \n                        <input type=\"text\" class=\"form-control form-control-sm\" id=\"subcategory\"\n                            formControlName=\"vehiclesubCategory\" [ngClass]=\"{\n                          'is-invalid': \n                            (vehicleForm.get('vehiclesubCategory').touched ||\n                              vehicleForm.get('vehiclesubCategory').dirty) &&\n                            !vehicleForm.get('vehiclesubCategory').valid\n                        }\" />\n                        <span class=\"invalid-feedback\">\n                            <span *ngIf=\"vehicleForm.get('vehiclesubCategory').errors?.required\">\n                                Vehicle Subcategory.\n                            </span>\n                           \n                        </span>\n                   </div>\n                   <div class=\"col-md-6\">\n                    <label for=\"color\" class=\"form-label\">Color</label>\n                        \n                    <input type=\"text\" class=\"form-control form-control-sm\" id=\"color\"\n                        formControlName=\"vehicleColor\" [ngClass]=\"{\n                      'is-invalid': \n                        (vehicleForm.get('vehicleColor').touched ||\n                          vehicleForm.get('vehicleColor').dirty) &&\n                        !vehicleForm.get('vehicleColor').valid\n                    }\" />\n                    <span class=\"invalid-feedback\">\n                        <span *ngIf=\"vehicleForm.get('vehicleColor').errors?.required\">\n                            Color is required.\n                        </span>\n                       \n                    </span>\n                      </div>\n                \n                </div>\n                <div class=\"form-group row\">\n                    <div class=\"col-md-6\">\n                        <label for=\"location\" class=\"form-label\">Available Location</label>\n                        \n                        <input type=\"text\" class=\"form-control form-control-sm\" id=\"location\"\n                            formControlName=\"availLocation\" [ngClass]=\"{\n                          'is-invalid': \n                            (vehicleForm.get('availLocation').touched ||\n                              vehicleForm.get('availLocation').dirty) &&\n                            !vehicleForm.get('availLocation').valid\n                        }\" />\n                        <span class=\"invalid-feedback\">\n                            <span *ngIf=\"vehicleForm.get('availLocation').errors?.required\">\n                                Location is required.\n                            </span>\n                           \n                        </span>\n                   </div>\n                   <div class=\"col-md-6\">\n                    <label for=\"imageurl\" class=\"form-label\">Image URL</label>\n                        \n                    <input type=\"text\" class=\"form-control form-control-sm\" id=\"imageurl\"\n                        formControlName=\"url\" [ngClass]=\"{\n                      'is-invalid': \n                        (vehicleForm.get('url').touched ||\n                          vehicleForm.get('url').dirty) &&\n                        !vehicleForm.get('url').valid\n                    }\" />\n                    <span class=\"invalid-feedback\">\n                        <span *ngIf=\"vehicleForm.get('url').errors?.required\">\n                            Image URL is required.\n                        </span>\n                       \n                    </span>\n                      </div>\n                \n                </div>\n                \n <div class=\"row\">\n     <div class=\"col-md-4\"></div>\n     <div class=\"col-md-4\"><input type=\"submit\" class=\"btn btn-primary\" style=\"width: 100%;\" value=\"Upload Details\" [disabled]=\"!vehicleForm.valid\"></div>\n     <div class=\"col-md-4\"></div>\n </div>\n                \n                       \n                 \n             </form>\n         </div>\n         </div>\n       \n </div>\n ","import { Component, OnInit } from '@angular/core';\nimport { Vehicle } from 'src/app/models/vehicle';\nimport { VehicleServiceService } from '../vehicle-service.service';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.scss']\n})\nexport class AdminDashboardComponent implements OnInit {\nvehicles:Vehicle[];\n  constructor(private vehicleService:VehicleServiceService) { }\n\n  ngOnInit(): void {\n    this.vehicleService.getAllVehicle().subscribe(result =>{\n      this.vehicles=result;\n      console.log(this.vehicles);\n    },err => alert(JSON.stringify(err)));\n  }\n\n}\n","<br><h2 style=\"text-align: center;\">Available Vehicles</h2><br>\n<div class=\"container\">\n     <div class=\"col-sm-12\">\n        \n            <button type=\"button\" class=\"btn btn-link\" id=\"vehicle\" [routerLink]=\"['/addvehicle']\">\n                <i class=\"fa fa-plus-circle\" aria-hidden=\"true\" style=\"color: #007BFF;\"></i> Add Vehicle</button>\n        \n    </div>\n    <div class=\"col-sm-12\">\n        <table class=\"table\">\n            <thead>\n                <tr id=\"row1\">\n                    <th scope=\"col\">Image</th>\n                    <th scope=\"col\">Model</th>\n                    <th scope=\"col\">Number</th>\n                    <th scope=\"col\">Sub Category</th>\n                    <th scope=\"col\">Fuel Type</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let vehicle of vehicles\">\n                    <th scope=\"row\">{{ vehicle.carImageUrl }}</th>\n                    <td>{{ vehicle.vehicleModel }}</td>\n                    <td>{{ vehicle.vehicleNumber}}</td>\n                    <td>{{ vehicle.vehicleSubCategoryId }}</td>\n                    <td>{{ vehicle.fuelTypeId }}</td>\n                </tr>\n               \n            </tbody>\n        </table>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddVehicleComponent } from './add-vehicle/add-vehicle.component';\nimport { AdminDashboardComponent } from './admin-dashboard/admin-dashboard.component';\n\n\nconst routes: Routes = [\n    {path:'addvehicle',component:AddVehicleComponent},\n    {path:'admindash',component:AdminDashboardComponent},\n\n    \n    \n   \n    \n  ];\n  @NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n  })\n  export class UserRoutingModule{}\n  ","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport{ Vehicle} from 'src/app/models/vehicle';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VehicleServiceService {\n private url='http://localhost:8012/hirewheels/v1/vehicles';\n  constructor(private httpClient:HttpClient) { }\n\n  getAllVehicle(){\n    return this.httpClient.get<Vehicle[]>(this.url);\n  }\n  addVehicle(vehicle:Vehicle){\n    return this.httpClient.post<Vehicle>(this.url,vehicle);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}