{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/booking/book-vehicle/book-vehicle.component.ts","webpack:///src/app/booking/book-vehicle/book-vehicle.component.html","webpack:///src/app/core/footer/footer.component.ts","webpack:///src/app/core/footer/footer.component.html","webpack:///src/app/core/nav-bar/nav-bar.component.ts","webpack:///src/app/core/nav-bar/nav-bar.component.html","webpack:///src/app/home/home/home.component.ts","webpack:///src/app/home/home/home.component.html","webpack:///src/app/model/user.ts","webpack:///src/app/shared/auth-service.service.ts","webpack:///src/app/shared/reset-password/reset-password.component.ts","webpack:///src/app/shared/reset-password/reset-password.component.html","webpack:///src/app/shared/sign-in/sign-in.component.ts","webpack:///src/app/shared/sign-in/sign-in.component.html","webpack:///src/app/shared/signin-modal/signin-modal.component.ts","webpack:///src/app/shared/signin-modal/signin-modal.component.html","webpack:///src/app/shared/signup/signup.component.ts","webpack:///src/app/shared/signup/signup.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","BookVehicleComponent","stepper","document","querySelector","linear","animation","previous","next","onSubmit","prev","FooterComponent","NavBarComponent","HomeComponent","User","AuthServiceService","httpClient","user","url","post","localStorage","setItem","JSON","stringify","jwtToken","credentials","pipe","errorHandler","response","saveUser","errorRes","errorMessage","error","getItem","providedIn","ResetPasswordComponent","SignInComponent","console","log","modalRef","modalRef2","SigninModalComponent","modalService","name","template","show","hide","openFirstModal","SignupComponent","router","authService","signup","subscribe","result","alert","err","signupUser","environment","production","bootstrapModule"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMC,MAAM,GAAW,EAAvB;;QAMaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBF,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBC,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBF,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaM,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,6BAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;AACA;;AACA;;;;;;;;;sEDKaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA6CaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAXJ,CACP,uEADO,EAEP,oEAFO,EAGP,4FAHO,EAIP,2DAJO,EAKP,mEALO,EAMP,gEAAYP,OAAZ,EANO,EAOP,8DAAWA,OAAX,EAPO,EAQP,qEARO,EASP,4EAAmBA,OAAnB,EATO,CAWI;;;;0HAGFO,S,EAAS;AAAA,uBAxBlB,2DAwBkB,EAvBlB,+EAuBkB,EAtBlB,kFAsBkB,EArBlB,wEAqBkB,EApBlB,8EAoBkB,EAnBlB,iGAmBkB,EAlBlB,gFAkBkB,EAjBlB,uGAiBkB,EAhBlB,kGAgBkB;AAhBE,kBAGpB,uEAHoB,EAIpB,oEAJoB,EAKpB,4FALoB,EAMpB,2DANoB,EAOpB,mEAPoB,EAOD,+DAPC,EAOD,6DAPC,EAUpB,qEAVoB,EAUJ,2EAVI;AAgBF,O;AANF,K;;;;;sEAMPA,S,EAAS;cA1BrB,sDA0BqB;eA1BZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,+EAFY,EAGZ,kFAHY,EAIZ,wEAJY,EAKZ,8EALY,EAMZ,iGANY,EAOZ,gFAPY,EAQZ,uGARY,EASZ,kGATY,CADN;AAYRP,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,4FAHO,EAIP,2DAJO,EAKP,mEALO,EAMP,gEAAYD,OAAZ,EANO,EAOP,8DAAWA,OAAX,EAPO,EAQP,qEARO,EASP,4EAAmBA,OAAnB,EATO,CAZD;AAuBRS,mBAAS,EAAE,EAvBH;AAwBRC,mBAAS,EAAE,CAAC,2DAAD;AAxBH,S;AA0BY,Q;;;;;;;;;;;;;;;;;;AC7CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,oB;AAGX,sCAAc;AAAA;AAAG;;;;mCAET;AACN,eAAKC,OAAL,GAAe,IAAI,iDAAJ,CAAYC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAZ,EAAiD;AAC9DC,kBAAM,EAAE,KADsD;AAE9DC,qBAAS,EAAE;AAFmD,WAAjD,CAAf;AAID;;;+BACM;AACL,eAAKJ,OAAL,CAAaK,QAAb;AACD;;;+BAEM;AACL,eAAKL,OAAL,CAAaM,IAAb;AACD;;;mCAEU;AACT,iBAAO,KAAP;AACD;;;;;;;uBArBUP,oB;AAAoB,K;;;YAApBA,oB;AAAoB,uC;AAAA,e;AAAA,a;AAAA,0lC;AAAA;AAAA;ACRjC;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAgC;;AAAC;;AACjC;;AAA+B;;AAAO;;AACxC;;AACF;;AACA;;AACA;;AACE;;AACE;;AAAgC;;AAAC;;AACjC;;AAA+B;;AAAQ;;AACzC;;AACF;;AACA;;AACA;;AACE;;AACE;;AAAgC;;AAAC;;AACjC;;AAA+B;;AAAkB;;AACnD;;AACF;;AACA;;AACA;;AACE;;AACE;;AAAgC;;AAAC;;AACjC;;AAA+B;;AAAe;;AAChD;;AACF;;AACF;;AACA;;AACE;;AAAM;AAAA,mBAAY,IAAAQ,QAAA,EAAZ;AAAsB,WAAtB;;AACJ;;AACE;;AACE;;AACE;;AAAoB;;AAAmB;;AACvC;;AAOF;;AACF;;AACA;;AACE;;AAAQ;AAAA,mBAAS,IAAAD,IAAA,EAAT;AAAe,WAAf;;AAAyC;;AAAI;;AACvD;;AACF;;AACA;;AACE;;AACE;;AACE;;AAMF;;AACA;;AACE;;AAOF;;AACF;;AACA;;AAAQ;AAAA,mBAAS,IAAAE,IAAA,EAAT;AAAe,WAAf;;AACN;;AACF;;AACA;;AAAQ;AAAA,mBAAS,IAAAF,IAAA,EAAT;AAAe,WAAf;;AAAyC;;AAAI;;AACvD;;AACA;;AACE;;AAAmD;;AAAM;;AAC3D;;AACA;;AACE;;AAAmD;;AAAM;;AAC3D;;AACF;;AACF;;AACF;;AACF;;;;;;;;;sED5EaP,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTP,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;AERjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOae,e;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,0P;AAAA;AAAA;ACP5B;;AACE;;AACE;;AAA0D;;AAAU;;AACtE;;AACA;;AAAoB;;AAAO;;AAC3B;;AACE;;AAAgE;;AAAQ;;AACvE;;AACD;;AAAyD;;AAAQ;;AACnE;;AACF;;;;;;;;sEDHaA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTjB,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOagB,e;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,kC;AAAA,c;AAAA,a;AAAA;AAAA;ACP5B;;AAAG;;AAAc;;;;;;;;sEDOJA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTlB,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;QAOaiB,a;AAEX,+BAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,iN;AAAA;AAAA;ACP1B;;AACE;;AACE;;AACA;;AACE;;AAAI;;AAAmC;;AACzC;;AACA;;AACF;;AACA;;AACA;;AACE;;AACA;;AACE;;AACE;;AAAS;;AACX;;AACF;;AACA;;AACF;;AACF;;;;AANoD;;AAAA;;;;;;;;;sEDLvCA,a,EAAa;cALzB,uDAKyB;eALf;AACTnB,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AEP1B;AAAA;;;AAAA;AAAA;AAAA;;QAAakB,I;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaC,kB;AAET,kCAAoBC,UAApB,EAA4C;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;AADpB,aAAAC,IAAA,GAAO,IAAI,4CAAJ,EAAP;AAC+C;;;;+BACxCA,I,EAAY;AACf,cAAIC,GAAG,GAAG,2CAAV;AACA,iBAAO,KAAKF,UAAL,CAAgBG,IAAhB,CAAqBD,GAArB,EAA0BD,IAA1B,CAAP;AACH;;;iCAEQA,I,EAAY;AACjBG,sBAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAA7B;AACAG,sBAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACO,QAAnC;AACH;;;8BAEKC,W,EAAW;AAAA;;AACb,cAAIP,GAAG,GAAG,iDAAV;AACA,iBAAO,KAAKF,UAAL,CAAgBG,IAAhB,CAA2BD,GAA3B,EAAgCO,WAAhC,EAA6CC,IAA7C,CAAkD,kEAAW,KAAKC,YAAhB,CAAlD,EACH,2DAAI,UAACC,QAAD,EAAoB;AACpB,iBAAI,CAACC,QAAL,CAAcD,QAAd;;AACA,iBAAI,CAACX,IAAL,CAAUT,IAAV,CAAeoB,QAAf;AACH,WAHD,CADG,CAAP;AAKH;;;qCAEoBE,Q,EAA6B;AAC9C,cAAIC,YAAY,GAAG,QAAnB;;AACA,cAAI,CAACD,QAAQ,CAACE,KAAV,IAAmB,CAACF,QAAQ,CAACE,KAAT,CAAeA,KAAvC,EAA8C;AAC1C,mBAAO,wDAAWD,YAAX,CAAP;AACH;;AAED,cAAID,QAAQ,CAACE,KAAT,IAAkBF,QAAQ,CAACE,KAAT,CAAeA,KAArC,EAA4C;AACxCD,wBAAY,GAAGD,QAAQ,CAACE,KAAT,CAAeA,KAA9B;AACH;;AAED,iBAAO,wDAAWD,YAAX,CAAP;AACH;;;mCAEU;AACP,iBAAOX,YAAY,CAACa,OAAb,CAAqB,OAArB,CAAP;AACH;;;;;;;uBArCQlB,kB,EAAkB,uH;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB,K;AAAA,kBAFf;;;;;sEAEHA,kB,EAAkB;cAH9B,wDAG8B;eAHnB;AACRmB,oBAAU,EAAE;AADJ,S;AAGmB,Q;;;;;;;;;;;;;;;;;;;;;;ACV/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACuBc;;AAAqC;;AAAqB;;;;;;AAC1D;;AACE;;AACF;;;;;;AAPF;;AAIE;;AACA;;AAGF;;;;;;;;AAJO;;AAAA;;AACA;;AAAA;;;;;;AA2BL;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AAXF;;AAME;;AAGA;;AAGF;;;;;;;;AANO;;AAAA;;AAGA;;AAAA;;;;;;AAyBL;;AAAoC;;AAAqB;;;;;;AACzD;;AACE;;AAEF;;;;;;AARF;;AAIE;;AACA;;AAIF;;;;;;;;AALO;;AAAA;;AACA;;AAAA;;;;;;AA2BL;;AACE;;AACF;;;;;;AATF;;AAOE;;AAGF;;;;;;;;AAHO;;AAAA;;;;QDnGNC,sB;AAKX,wCAAc;AAAA;AAAG;;;;mCAET,CACP;;;iCACQV,W,EAAqB,CAE7B;;;;;;;uBAXUU,sB;AAAsB,K;;;YAAtBA,sB;AAAsB,yC;AAAA,e;AAAA,a;AAAA,wvC;AAAA;AAAA;;;ACRnC;;AACE;;AACE;;AACE;;AAAI;;AAAc;;AACpB;;AACA;;AACE;;AAAM;AAAA;;AAAA;;AAAA,mBAAY,IAAA1B,QAAA,WAAZ;AAAqC,WAArC;;AACJ;;AACE;;AAAmD;;AAAS;;AAC5D;;AACE;;AAGE;AAAA;AAAA;;AAHF;;AASA;;AASF;;AACF;;AAEA;;AACE;;AACG;;AAAc;;AAEjB;;AACE;;AAGE;AAAA;AAAA;;AAHF;;AASA;;AAaF;;AACF;;AAEA;;AACE;;AACG;;AAAS;;AAEZ;;AACE;;AAGE;AAAA;AAAA;;AAHF;;AASA;;AAUF;;AACF;;AACA;;AACE;;AACE;;AAAiB;;AAEnB;;AACE;;AAGE;AAAA;AAAA;;AAHF;;AAQA;;AAWF;;AACF;;AAEA;;AACE;;AACA;;AACE;;AAOF;;AACA;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;;;;;;;;;AArHc;;AAAA;;AAOA;;AAAA;;AAmBA;;AAAA;;AAOA;;AAAA;;AAuBA;;AAAA;;AAOA;;AAAA;;AAmBA;;AAAA;;AAMA;;AAAA;;AAqBA;;AAAA;;;;;;;;;sEDlHD0B,sB,EAAsB;cALlC,uDAKkC;eALxB;AACTzC,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;AERnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACqBc;;AAAqC;;AAAqB;;;;;;AAC1D;;AACE;;AACF;;;;;;AAPF;;AAIE;;AACA;;AAGF;;;;;;;;AAJO;;AAAA;;AACA;;AAAA;;;;;;AAwBL;;AAAoC;;AAAqB;;;;;;AAJ3D;;AAIE;;AACF;;;;;;;;AADO;;AAAA;;;;QDtCNwC,e;AAEX,iCAAc;AAAA;AAAG;;;;mCAGT,CACP;;;iCACQX,W,EAAqB;AAC5BY,iBAAO,CAACC,GAAR,CAAYb,WAAZ;AACD;;;;;;;uBATUW,e;AAAe,K;;;YAAfA,e;AAAe,kC;AAAA,e;AAAA,a;AAAA,izB;AAAA;AAAA;;;ACR5B;;AACE;;AACE;;AAAoD;;AAAI;;AAAO;;AAAK;;AACpE;;AACE;;AAAM;AAAA;;AAAA;;AAAA,mBAAY,IAAA3B,QAAA,WAAZ;AAAsC,WAAtC;;AACJ;;AACE;;AAAmD;;AAAS;;AAC5D;;AACE;;AAGE;AAAA;AAAA;;AAHF;;AASA;;AASF;;AACF;;AAEA;;AACE;;AACG;;AAAS;;AAEZ;;AACE;;AAGE;AAAA;AAAA;;AAHF;;AAQA;;AAMF;;AACF;;AACA;;AACA;;AACE;;AACA;;AACE;;AAOF;;AACA;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;;;;;AAxDc;;AAAA;;AAOA;;AAAA;;AAmBA;;AAAA;;AAMA;;AAAA;;AAgBA;;AAAA;;;;;;;;;sEDnDD2B,e,EAAe;cAL3B,uDAK2B;eALjB;AACT1C,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AER5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACmBW;;AACC;;AAA8B;;AAChC;;;;;;AAyBC;;AACC;;AAAgC;;AAClC;;;;;;;;AA3CR;;AACE;;AAIE;AAAA;;AAAA;;AAAA,iBAAS,OAAA2C,QAAA,OAAT;AAAwB,SAAxB;;AAEA;;AAAyB;;AAAO;;AAClC;;AACF;;AACA;;AACE;;AACE;;AACE;;AAKA;;AAEA;;AACE;;AACA;;AACE;;AAGE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACF;;AACF;;AACA;;AACF;;AACA;;AACE;;AACE;;AAAuB;;AAAY;;AAAO;;AAC5C;;AACF;;AACF;;AACA;;AACE;;AAKA;;AACF;;AACF;;AACA;;AACF;;;;;;;;AAIA;;AACE;;AAIE;AAAA;;AAAA;;AAAA,iBAAS,OAAAC,SAAA,OAAT;AAAyB,SAAzB;;AAEA;;AAAyB;;AAAO;;AAClC;;AACF;;AACA;;AACE;;AACF;;;;QD3DWC,oB;AAIX,oCAAoBC,YAApB,EAAkD;AAAA;;AAA9B,aAAAA,YAAA,GAAAA,YAAA;AAHpB,aAAAC,IAAA,GAAO,SAAP;AAGqD;;;;mCAE7C,CACP;;;uCACcC,Q,EAA4B;AACzC,eAAKL,QAAL,GAAgB,KAAKG,YAAL,CAAkBG,IAAlB,CAAuBD,QAAvB,EAAiC;AAAE,qBAAO;AAAT,WAAjC,CAAhB;AACD;;;wCACeA,Q,EAA4B;AAC1C,eAAKJ,SAAL,GAAiB,KAAKE,YAAL,CAAkBG,IAAlB,CAAuBD,QAAvB,EAAiC;AAAE,qBAAO;AAAT,WAAjC,CAAjB;AACD;;;0CACiB;AAChB,cAAI,CAAC,KAAKL,QAAV,EAAoB;AAClB;AACD;;AAED,eAAKA,QAAL,CAAcO,IAAd;AACA,eAAKP,QAAL,GAAgB,IAAhB;AACD;;;qCAEY;AACX,eAAKC,SAAL,CAAeM,IAAf;AACD;;;;;;;uBAzBUL,oB,EAAoB,mI;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,c;AAAA,a;AAAA,8jB;AAAA;AAAA;;;ACXjC;;AAAuC;AAAA;;AAAA;;AAAA,mBAAS,IAAAM,cAAA,KAAT;AAAsC,WAAtC;;AACrC;;AACF;;AAEA;;AAqDA;;;;;;;;;sED9CaN,oB,EAAoB;cALhC,uDAKgC;eALtB;AACT/C,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;AEXjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACwBc;;AACE;;AACF;;;;;;AARF;;AAME;;AAGF;;;;;;;;AAHO;;AAAA;;;;;;AAuCL;;AAAqC;;AAAqB;;;;;;AAC1D;;AACE;;AACF;;;;;;AAPF;;AAIE;;AACA;;AAGF;;;;;;;;AAJO;;AAAA;;AACA;;AAAA;;;;;;AA2BL;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AAXF;;AAME;;AAGA;;AAGF;;;;;;;;AANO;;AAAA;;AAGA;;AAAA;;;;;;AAyBL;;AAAoC;;AAAqB;;;;;;AACzD;;AACE;;AAEF;;;;;;AARF;;AAIE;;AACA;;AAIF;;;;;;;;AALO;;AAAA;;AACA;;AAAA;;;;;;AA2BL;;AACE;;AACF;;;;;;AATF;;AAOE;;AAGF;;;;;;;;AAHO;;AAAA;;;;QDvINoD,e;AAEX,+BAAoBC,MAApB,EAA4CC,WAA5C,EAA6E;AAAA;;AAAzD,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAC,WAAA,GAAAA,WAAA;AAD5C,aAAAC,MAAA,GAAS,IAAI,uDAAJ,EAAT;AACgF;;;;mCAExE,CACP;;;qCACY;AAAA;;AACX,eAAKD,WAAL,CAAiBC,MAAjB,CAAwB,KAAKA,MAA7B,EAAqCC,SAArC,CAA+C,UAAAC,MAAM,EAAI;AACvD;AACAhB,mBAAO,CAACC,GAAR,CAAYe,MAAZ;;AACA,kBAAI,CAACH,WAAL,CAAiBrB,QAAjB,CAA0B,MAAI,CAACsB,MAA/B;;AACAG,iBAAK,CAAC,mBAAD,CAAL;AAED,WAND,EAMG,UAAAC,GAAG,EAAI;AACRD,iBAAK,CAAChC,IAAI,CAACC,SAAL,CAAegC,GAAf,CAAD,CAAL;AACD,WARD;AASD;;;;;;;uBAhBUP,e,EAAe,uH,EAAA,yI;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,c;AAAA,2mD;AAAA;AAAA;ACZ5B;;AACE;;AACE;;AAAoD;;AAAI;;AAAO;;AAAK;;AACpE;;AACE;;AAAM;AAAA,mBAAY,IAAAQ,UAAA,EAAZ;AAAwB,WAAxB;;AACJ;;AACE;;AACG;;AAAW;;AAEd;;AACE;;AAGE;AAAA;AAAA;;AAHF;;AAQA;;AAUF;;AACF;;AAEA;;AACE;;AACG;;AAAU;;AAEb;;AACE;;AAGE;AAAA;AAAA;;AAHF;;AAQF;;AACF;;AAEA;;AACE;;AAAmD;;AAAS;;AAC5D;;AACE;;AAGE;AAAA;AAAA;;AAHF;;AASA;;AASF;;AACF;;AAEA;;AACE;;AACG;;AAAc;;AAEjB;;AACE;;AAGE;AAAA;AAAA;;AAHF;;AASA;;AAaF;;AACF;;AAEA;;AACE;;AACG;;AAAS;;AAEZ;;AACE;;AAGE;AAAA;AAAA;;AAHF;;AASA;;AAUF;;AACF;;AACA;;AACE;;AACE;;AAAiB;;AAEnB;;AACE;;AAGE;AAAA;AAAA;;AAHF;;AAQA;;AAWF;;AACF;;AACA;;AACA;;AACE;;AACA;;AACE;;AAOF;;AACA;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;;;;;;;;;;;AA7Jc;;AAAA;;AAMA;;AAAA;;AAoBA;;AAAA;;AAcA;;AAAA;;AAOA;;AAAA;;AAmBA;;AAAA;;AAOA;;AAAA;;AAuBA;;AAAA;;AAOA;;AAAA;;AAmBA;;AAAA;;AAMA;;AAAA;;AAoBA;;AAAA;;;;;;;;;sEDrJDR,e,EAAe;cAL3B,uDAK2B;eALjB;AACTtD,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEZ5B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAM6D,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAJ,GAAG;AAAA,aAAIlB,OAAO,CAACL,KAAR,CAAcuB,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'tm-car-renting-app-frontend';\n}\n","<app-nav-bar></app-nav-bar>\n<app-footer></app-footer>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavBarComponent } from './core/nav-bar/nav-bar.component';\nimport { SignInComponent } from './shared/sign-in/sign-in.component';\nimport { HomeComponent } from './home/home/home.component';\nimport { FooterComponent } from './core/footer/footer.component';\nimport { SigninModalComponent } from './shared/signin-modal/signin-modal.component';\nimport { SignupComponent } from './shared/signup/signup.component';\nimport { ResetPasswordComponent } from './shared/reset-password/reset-password.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BookVehicleComponent } from './booking/book-vehicle/book-vehicle.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n    SignInComponent,\n    HomeComponent,\n    FooterComponent,\n    SigninModalComponent,\n    SignupComponent,\n    ResetPasswordComponent,\n    BookVehicleComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ModalModule.forRoot(),\n    TabsModule.forRoot(),\n    HttpClientModule,\n    BsDatepickerModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport Stepper from 'bs-stepper';\n\n@Component({\n  selector: 'app-book-vehicle',\n  templateUrl: './book-vehicle.component.html',\n  styleUrls: ['./book-vehicle.component.scss']\n})\nexport class BookVehicleComponent implements OnInit {\n  private stepper: Stepper;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.stepper = new Stepper(document.querySelector('#stepper1'), {\n      linear: false,\n      animation: true\n    })\n  }\n  prev() {\n    this.stepper.previous();\n  }\n\n  next() {\n    this.stepper.next();\n  }\n\n  onSubmit() {\n    return false;\n  }\n}\n","<div class=\"container\">\n  <div id=\"stepper1\" class=\"bs-stepper\">\n    <div class=\"bs-stepper-header\">\n      <div class=\"step\" data-target=\"#test-l-1\">\n        <button class=\"step-trigger\">\n          <span class=\"bs-stepper-circle\">1</span>\n          <span class=\"bs-stepper-label\">Pick Up</span>\n        </button>\n      </div>\n      <div class=\"line\"></div>\n      <div class=\"step\" data-target=\"#test-l-2\">\n        <button class=\"step-trigger\">\n          <span class=\"bs-stepper-circle\">2</span>\n          <span class=\"bs-stepper-label\">Drop Off</span>\n        </button>\n      </div>\n      <div class=\"line\"></div>\n      <div class=\"step\" data-target=\"#test-l-3\">\n        <button class=\"step-trigger\">\n          <span class=\"bs-stepper-circle\">3</span>\n          <span class=\"bs-stepper-label\">Available Vehicles</span>\n        </button>\n      </div>\n      <div class=\"line\"></div>\n      <div class=\"step\" data-target=\"#test-l-4\">\n        <button class=\"step-trigger\">\n          <span class=\"bs-stepper-circle\">4</span>\n          <span class=\"bs-stepper-label\">Confirm Booking</span>\n        </button>\n      </div>\n    </div>\n    <div class=\"bs-stepper-content\">\n      <form (ngSubmit)=\"onSubmit()\">\n        <div id=\"test-l-1\" class=\"content\">\n          <div class=\"form-group\">\n            <div class=\"col-md-4\">\n              <label for=\"pickup\">Select Pick Up Date</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"pickup\"\n                placeholder=\"Select Pick Up Date\"\n                bsDatepicker\n              />\n            </div>\n          </div>\n          <div class=\"col-md-4\">\n            <button (click)=\"next()\" class=\"btn btn-primary\">Next</button>\n          </div>\n        </div>\n        <div id=\"test-l-2\" class=\"content\">\n          <div class=\"form-group row\">\n            <div class=\"col-sm-4\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"location\"\n                placeholder=\"Select Location\"\n              />\n            </div>\n            <div class=\"col-sm-4\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                id=\"dropoff\"\n                placeholder=\"Select Drop Off Date\"\n                bsDatepicker\n              />\n            </div>\n          </div>\n          <button (click)=\"prev()\" type=\"button\" class=\"btn btn-default\">\n            Prev\n          </button>\n          <button (click)=\"next()\" class=\"btn btn-primary\">Next</button>\n        </div>\n        <div id=\"test-l-3\" class=\"content text-center\">\n          <button type=\"submit\" class=\"btn btn-primary mt-5\">Submit</button>\n        </div>\n        <div id=\"test-l-4\" class=\"content text-center\">\n          <button type=\"submit\" class=\"btn btn-primary mt-5\">Submit</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"footer\">\n  <div>\n    <a href=\"https://www.upgrad.com/contact/\" target=\"_blank\">Contact Us</a>\n  </div>\n  <div id=\"copyright\">©upGrad</div>\n  <div>\n    <a href=\"https://www.facebook.com/UpGradGlobal\" target=\"_blank\">Facebook</a\n    >&nbsp;\n    <a href=\"https://twitter.com/UpGrad_Edu\" target=\"_blank\">Twitter </a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>nav-bar works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col-md-2\"></div>\n    <div class=\"col-md-8\" style=\"text-align: center\">\n      <h3>Self-drive vehicle rental in Mumbai</h3>\n    </div>\n    <div class=\"col-md-2\"></div>\n  </div>\n  <br />\n  <div class=\"row\">\n    <div class=\"col-md-2\"></div>\n    <div class=\"col-md-8\" style=\"text-align: center\">\n      <button type=\"button\" class=\"btn btn-success\" [routerLink]=\"['/book']\">\n        Book Now <i class=\"fa fa-arrow-circle-right\"></i>\n      </button>\n    </div>\n    <div class=\"col-md-2\"></div>\n  </div>\n</div>\n","export class User {\n    userId?: number;\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    mobileNo: string;\n    jwtToken: string;\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { User } from '../model/user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthServiceService {\n    user = new Subject<User>();\n    constructor(private httpClient: HttpClient) { }\n    signup(user: User) {\n        let url = 'http://localhost:8012/hirewheels/v1/users';\n        return this.httpClient.post(url, user);\n    }\n\n    saveUser(user: User) {\n        localStorage.setItem('user', JSON.stringify(user));\n        localStorage.setItem('token', user.jwtToken);\n    }\n\n    login(credentials): Observable<User> {\n        let url = 'localhost:8012/hirewheels/v1/users/access-token';\n        return this.httpClient.post<User>(url, credentials).pipe(catchError(this.errorHandler),\n            tap((response: User) => {\n                this.saveUser(response);\n                this.user.next(response);\n            }));\n    }\n\n    private errorHandler(errorRes: HttpErrorResponse) {\n        let errorMessage = 'Error!';\n        if (!errorRes.error || !errorRes.error.error) {\n            return throwError(errorMessage);\n        }\n\n        if (errorRes.error && errorRes.error.error) {\n            errorMessage = errorRes.error.error;\n        }\n\n        return throwError(errorMessage);\n    }\n\n    getToken() {\n        return localStorage.getItem('token');\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n  email: string\n  mobile: string\n  password: string\n  conpassword: string\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  onSubmit(credentials: NgForm) {\n\n  }\n}\n","<div class=\"container\">\n  <div class=\"card\">\n    <div class=\"card-header\" style=\"text-align: center\">\n      <h3>Reset Password</h3>\n    </div>\n    <div class=\"card-body\">\n      <form (ngSubmit)=\"onSubmit(resetForm.value)\" #resetForm=\"ngForm\">\n        <div class=\"form-group row\">\n          <label for=\"email\" class=\"col-lg-3 col-form-label\">Email ID:</label>\n          <div class=\"col-lg-9\">\n            <input\n              type=\"email\"\n              name=\"email\"\n              [(ngModel)]=\"email\"\n              class=\"form-control\"\n              required\n              #emailid=\"ngModel\"\n              pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n            />\n            <div\n              *ngIf=\"emailid.invalid && (emailid.dirty || emailid.touched)\"\n              class=\"text-danger\"\n            >\n              <div *ngIf=\"emailid.errors.required\">Email id is required.</div>\n              <div *ngIf=\"emailid.errors.pattern\">\n                Enter a valid email address\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"mobile\" class=\"col-lg-3 col-form-label\"\n            >Mobile Number:</label\n          >\n          <div class=\"col-lg-9\">\n            <input\n              type=\"text\"\n              name=\"mobile\"\n              [(ngModel)]=\"mobile\"\n              class=\"form-control\"\n              required\n              #mobileNum=\"ngModel\"\n              pattern=\"[1-9][0-9]{9}\"\n            />\n            <div\n              *ngIf=\"\n                mobileNum.invalid && (mobileNum.dirty || mobileNum.touched)\n              \"\n              class=\"text-danger\"\n            >\n              <div *ngIf=\"mobileNum.errors.required\">\n                Mobile Number is required.\n              </div>\n              <div *ngIf=\"mobileNum.errors.pattern\">\n                Mobile number must have 10 digits only and cannot start with 0.\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"password\" class=\"col-lg-3 col-form-label\"\n            >Password:</label\n          >\n          <div class=\"col-lg-9\">\n            <input\n              type=\"password\"\n              name=\"password\"\n              [(ngModel)]=\"password\"\n              class=\"form-control\"\n              required\n              #passwd=\"ngModel\"\n              pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}\"\n            />\n            <div\n              *ngIf=\"passwd.invalid && (passwd.dirty || passwd.touched)\"\n              class=\"text-danger\"\n            >\n              <div *ngIf=\"passwd.errors.required\">Password is required.</div>\n              <div *ngIf=\"passwd.errors.pattern\">\n                Password should have minimum 5 characters, at least 1 uppercase\n                letter, 1 lowercase letter and 1 number.\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label for=\"conpassword\" class=\"col-lg-3 col-form-label\">\n            Confirm Password:</label\n          >\n          <div class=\"col-lg-9\">\n            <input\n              type=\"password\"\n              name=\"conpassword\"\n              [(ngModel)]=\"conpassword\"\n              class=\"form-control\"\n              required\n              #confirmpasswd=\"ngModel\"\n            />\n            <div\n              *ngIf=\"\n                confirmpasswd.invalid &&\n                (confirmpasswd.dirty || confirmpasswd.touched)\n              \"\n              class=\"text-danger\"\n            >\n              <div *ngIf=\"confirmpasswd.errors.required\">\n                Confirm Password is required.\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <div class=\"col-md-3\"></div>\n          <div class=\"col-md-6\">\n            <input\n              type=\"submit\"\n              class=\"btn btn-primary\"\n              style=\"width: 100%\"\n              value=\"Submit\"\n              [disabled]=\"!resetForm.valid\"\n            />\n          </div>\n          <div class=\"col-md-3\"></div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss']\n})\nexport class SignInComponent implements OnInit {\n\n  constructor() { }\n  email: string\n  password: string\n  ngOnInit(): void {\n  }\n  onSubmit(credentials: NgForm) {\n    console.log(credentials);\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"card\">\n    <div class=\"card-header\" style=\"text-align: center\"><h3>Sign In</h3></div>\n    <div class=\"card-body\">\n      <form (ngSubmit)=\"onSubmit(signinForm.value)\" #signinForm=\"ngForm\">\n        <div class=\"form-group row\">\n          <label for=\"email\" class=\"col-lg-3 col-form-label\">Email ID:</label>\n          <div class=\"col-lg-9\">\n            <input\n              type=\"email\"\n              name=\"email\"\n              [(ngModel)]=\"email\"\n              class=\"form-control\"\n              required\n              #emailid=\"ngModel\"\n              pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n            />\n            <div\n              *ngIf=\"emailid.invalid && (emailid.dirty || emailid.touched)\"\n              class=\"text-danger\"\n            >\n              <div *ngIf=\"emailid.errors.required\">Email id is required.</div>\n              <div *ngIf=\"emailid.errors.pattern\">\n                Enter a valid email address\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"password\" class=\"col-lg-3 col-form-label\"\n            >Password:</label\n          >\n          <div class=\"col-lg-9\">\n            <input\n              type=\"password\"\n              name=\"password\"\n              [(ngModel)]=\"password\"\n              class=\"form-control\"\n              required\n              #passwd=\"ngModel\"\n            />\n            <div\n              *ngIf=\"passwd.invalid && (passwd.dirty || passwd.touched)\"\n              class=\"text-danger\"\n            >\n              <div *ngIf=\"passwd.errors.required\">Password is required.</div>\n            </div>\n          </div>\n        </div>\n        <br />\n        <div class=\"form-group row\">\n          <div class=\"col-md-3\"></div>\n          <div class=\"col-md-6\">\n            <input\n              type=\"submit\"\n              class=\"btn btn-primary\"\n              style=\"width: 100%\"\n              value=\"Sign In\"\n              [disabled]=\"!signinForm.valid\"\n            />\n          </div>\n          <div class=\"col-md-3\"></div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\n\n\n\n@Component({\n  selector: 'app-signin-modal',\n  templateUrl: './signin-modal.component.html',\n  styleUrls: ['./signin-modal.component.scss']\n})\nexport class SigninModalComponent {\n  name = 'Angular';\n  modalRef: BsModalRef | null;\n  modalRef2: BsModalRef;\n  constructor(private modalService: BsModalService) { }\n\n  ngOnInit(): void {\n  }\n  openFirstModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template, { class: 'modal-lg' });\n  }\n  openModalSecond(template: TemplateRef<any>) {\n    this.modalRef2 = this.modalService.show(template, { class: 'modal-lg' });\n  }\n  closeFirstModal() {\n    if (!this.modalRef) {\n      return;\n    }\n\n    this.modalRef.hide();\n    this.modalRef = null;\n  }\n\n  closeModal() {\n    this.modalRef2.hide();\n  }\n}\n\n\n","<button class=\"btn btn-link\" id=\"sign\" (click)=\"openFirstModal(templatefirst)\">\n  Sign In\n</button>\n\n<ng-template #templatefirst>\n  <div class=\"modal-header\">\n    <button\n      type=\"button\"\n      class=\"close pull-right\"\n      aria-label=\"Close\"\n      (click)=\"modalRef.hide()\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <tabset>\n      <tab id=\"tab1\">\n        <ng-template tabHeading\n          ><div id=\"signintab\">\n            <i class=\"fa fa-sign-in\"></i> &nbsp;Sign in\n          </div></ng-template\n        >\n        <app-sign-in></app-sign-in>\n\n        <div class=\"row\">\n          <div class=\"col-md-3\"></div>\n          <div class=\"col-md-6\" style=\"text-align: center\">\n            <button\n              type=\"button\"\n              class=\"btn btn-link\"\n              (click)=\"openModalSecond(templateSecond)\"\n            >\n              Forgot Password\n            </button>\n          </div>\n          <div class=\"col-md-3\"></div>\n        </div>\n        <div>\n          <p style=\"text-align: center\">\n            Don't have an account? <a href=\"#\">Sign Up</a>\n          </p>\n        </div>\n      </tab>\n      <tab id=\"tab2\">\n        <ng-template tabHeading\n          ><div id=\"signuptab\">\n            <i class=\"fa fa-user-plus\"></i> &nbsp;Sign up\n          </div></ng-template\n        >\n        <app-signup></app-signup>\n      </tab>\n    </tabset>\n    <br />\n  </div>\n</ng-template>\n\n<ng-template #templateSecond>\n  <div class=\"modal-header\">\n    <button\n      type=\"button\"\n      class=\"close pull-right\"\n      aria-label=\"Close\"\n      (click)=\"modalRef2.hide()\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <app-reset-password></app-reset-password>\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/model/user';\n\nimport { AuthServiceService } from '../auth-service.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  signup = new User();\n  constructor(private router: Router, private authService: AuthServiceService) { }\n\n  ngOnInit(): void {\n  }\n  signupUser() {\n    this.authService.signup(this.signup).subscribe(result => {\n      //success\n      console.log(result);\n      this.authService.saveUser(this.signup);\n      alert('Signup successful');\n\n    }, err => {\n      alert(JSON.stringify(err));\n    });\n  }\n}\n","<div class=\"container\">\n  <div class=\"card\">\n    <div class=\"card-header\" style=\"text-align: center\"><h3>Sign Up</h3></div>\n    <div class=\"card-body\">\n      <form (ngSubmit)=\"signupUser()\" #signupForm=\"ngForm\">\n        <div class=\"form-group row\">\n          <label for=\"firstname\" class=\"col-lg-3 col-form-label\"\n            >First Name:</label\n          >\n          <div class=\"col-lg-9\">\n            <input\n              type=\"text\"\n              name=\"firstname\"\n              [(ngModel)]=\"signup.firstName\"\n              class=\"form-control\"\n              required\n              #firstname=\"ngModel\"\n            />\n            <div\n              *ngIf=\"\n                firstname.invalid && (firstname.dirty || firstname.touched)\n              \"\n              class=\"text-danger\"\n            >\n              <div *ngIf=\"firstname.errors.required\">\n                First Name is required.\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"lastname\" class=\"col-lg-3 col-form-label\"\n            >Last Name:</label\n          >\n          <div class=\"col-lg-9\">\n            <input\n              type=\"text\"\n              name=\"lastname\"\n              [(ngModel)]=\"signup.lastName\"\n              class=\"form-control\"\n              required\n              #lastname=\"ngModel\"\n            />\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"email\" class=\"col-lg-3 col-form-label\">Email ID:</label>\n          <div class=\"col-lg-9\">\n            <input\n              type=\"email\"\n              name=\"email\"\n              [(ngModel)]=\"signup.email\"\n              class=\"form-control\"\n              required\n              #emailid=\"ngModel\"\n              pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n            />\n            <div\n              *ngIf=\"emailid.invalid && (emailid.dirty || emailid.touched)\"\n              class=\"text-danger\"\n            >\n              <div *ngIf=\"emailid.errors.required\">Email id is required.</div>\n              <div *ngIf=\"emailid.errors.pattern\">\n                Enter a valid email address\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"mobile\" class=\"col-lg-3 col-form-label\"\n            >Mobile Number:</label\n          >\n          <div class=\"col-lg-9\">\n            <input\n              type=\"text\"\n              name=\"mobile\"\n              [(ngModel)]=\"signup.mobileNo\"\n              class=\"form-control\"\n              required\n              #mobileNum=\"ngModel\"\n              pattern=\"[1-9][0-9]{9}\"\n            />\n            <div\n              *ngIf=\"\n                mobileNum.invalid && (mobileNum.dirty || mobileNum.touched)\n              \"\n              class=\"text-danger\"\n            >\n              <div *ngIf=\"mobileNum.errors.required\">\n                Mobile Number is required.\n              </div>\n              <div *ngIf=\"mobileNum.errors.pattern\">\n                Mobile number must have 10 digits only and cannot start with 0.\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label for=\"password\" class=\"col-lg-3 col-form-label\"\n            >Password:</label\n          >\n          <div class=\"col-lg-9\">\n            <input\n              type=\"password\"\n              name=\"password\"\n              [(ngModel)]=\"signup.password\"\n              class=\"form-control\"\n              required\n              #passwd=\"ngModel\"\n              pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}\"\n            />\n            <div\n              *ngIf=\"passwd.invalid && (passwd.dirty || passwd.touched)\"\n              class=\"text-danger\"\n            >\n              <div *ngIf=\"passwd.errors.required\">Password is required.</div>\n              <div *ngIf=\"passwd.errors.pattern\">\n                Password should have minimum 5 characters, at least 1 uppercase\n                letter, 1 lowercase letter and 1 number.\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"form-group row\">\n          <label for=\"conpassword\" class=\"col-lg-3 col-form-label\">\n            Confirm Password:</label\n          >\n          <div class=\"col-lg-9\">\n            <input\n              type=\"password\"\n              name=\"conpassword\"\n              [(ngModel)]=\"signup.password\"\n              class=\"form-control\"\n              required\n              #confirmpasswd=\"ngModel\"\n            />\n            <div\n              *ngIf=\"\n                confirmpasswd.invalid &&\n                (confirmpasswd.dirty || confirmpasswd.touched)\n              \"\n              class=\"text-danger\"\n            >\n              <div *ngIf=\"confirmpasswd.errors.required\">\n                Confirm Password is required.\n              </div>\n            </div>\n          </div>\n        </div>\n        <br />\n        <div class=\"form-group row\">\n          <div class=\"col-md-3\"></div>\n          <div class=\"col-md-6\">\n            <input\n              type=\"submit\"\n              class=\"btn btn-primary\"\n              value=\"Sign In\"\n              [disabled]=\"!signupForm.valid\"\n              style=\"width: 100%\"\n            />\n          </div>\n          <div class=\"col-md-3\"></div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}